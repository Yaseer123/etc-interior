"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-curved-text@2.0.2_rea_21acddbbe130a6ca55cb0b3a0d033fb6";
exports.ids = ["vendor-chunks/react-curved-text@2.0.2_rea_21acddbbe130a6ca55cb0b3a0d033fb6"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/react-curved-text@2.0.2_rea_21acddbbe130a6ca55cb0b3a0d033fb6/node_modules/react-curved-text/dist/index.es.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-curved-text@2.0.2_rea_21acddbbe130a6ca55cb0b3a0d033fb6/node_modules/react-curved-text/dist/index.es.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactCurvedText: () => (/* binding */ Pt),\n/* harmony export */   \"default\": () => (/* binding */ Pt)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.32_react-dom@18.2_b2176f17174b61f7c364ede938dcb6ef/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction i(){return i=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},i.apply(this,arguments)}const a={origin:[0,0,0],round:4},o={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0};function m(t){let e=t.pathValue[t.segmentStart],r=e.toLowerCase();const{data:n}=t;for(;n.length>=o[r]&&(\"m\"===r&&n.length>2?(t.segments.push([e,...n.splice(0,2)]),r=\"l\",e=\"m\"===e?\"l\":\"L\"):t.segments.push([e,...n.splice(0,o[r])]),o[r]););}const c=\"SVGPathCommander error\";function u(t){const{index:e,pathValue:r}=t,n=r.charCodeAt(e);return 48===n?(t.param=0,void(t.index+=1)):49===n?(t.param=1,void(t.index+=1)):void(t.err=`${c}: invalid Arc flag \"${r[e]}\", expecting 0 or 1 at index ${e}`)}function l(t){return t>=48&&t<=57}const h=\"Invalid path value\";function f(t){const{max:e,pathValue:r,index:n}=t;let s,i=n,a=!1,o=!1,m=!1,u=!1;if(i>=e)t.err=`${c}: ${h} at index ${i}, \"pathValue\" is missing param`;else if(s=r.charCodeAt(i),43!==s&&45!==s||(i+=1,s=r.charCodeAt(i)),l(s)||46===s){if(46!==s){if(a=48===s,i+=1,s=r.charCodeAt(i),a&&i<e&&s&&l(s))return void(t.err=`${c}: ${h} at index ${n}, \"${r[n]}\" illegal number`);for(;i<e&&l(r.charCodeAt(i));)i+=1,o=!0;s=r.charCodeAt(i)}if(46===s){for(u=!0,i+=1;l(r.charCodeAt(i));)i+=1,m=!0;s=r.charCodeAt(i)}if(101===s||69===s){if(u&&!o&&!m)return void(t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" invalid float exponent`);if(i+=1,s=r.charCodeAt(i),43!==s&&45!==s||(i+=1),!(i<e&&l(r.charCodeAt(i))))return void(t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" invalid integer exponent`);for(;i<e&&l(r.charCodeAt(i));)i+=1}t.index=i,t.param=+t.pathValue.slice(n,i)}else t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" is not a number`}function y(t){const{pathValue:e,max:r}=t;for(;t.index<r&&(10===(n=e.charCodeAt(t.index))||13===n||8232===n||8233===n||32===n||9===n||11===n||12===n||160===n||n>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].includes(n));)t.index+=1;var n}function x(t){return t>=48&&t<=57||43===t||45===t||46===t}function p(t){const{max:e,pathValue:r,index:n}=t,s=r.charCodeAt(n),i=o[r[n].toLowerCase()];if(t.segmentStart=n,function(t){switch(32|t){case 109:case 122:case 108:case 104:case 118:case 99:case 115:case 113:case 116:case 97:return!0;default:return!1}}(s))if(t.index+=1,y(t),t.data=[],i){for(;;){for(let n=i;n>0;n-=1){if(97!=(32|s)||3!==n&&4!==n?f(t):u(t),t.err.length)return;t.data.push(t.param),y(t),t.index<e&&44===r.charCodeAt(t.index)&&(t.index+=1,y(t))}if(t.index>=t.max)break;if(!x(r.charCodeAt(t.index)))break}m(t)}else m(t);else t.err=`${c}: ${h} \"${r[n]}\" is not a path command`}function g(t){return t.map((t=>Array.isArray(t)?[...t]:t))}function d(t){this.segments=[],this.pathValue=t,this.max=t.length,this.index=0,this.param=0,this.segmentStart=0,this.data=[],this.err=\"\"}function b(t){return Array.isArray(t)&&t.every((t=>{const e=t[0].toLowerCase();return o[e]===t.length-1&&\"achlmqstvz\".includes(e)}))}function M(t){if(b(t))return g(t);const e=new d(t);for(y(e);e.index<e.max&&!e.err.length;)p(e);return e.err?e.err:e.segments}function w(t){return b(t)&&t.every((([t])=>t===t.toUpperCase()))}function v(t){if(w(t))return g(t);const e=M(t);let r=0,n=0,s=0,i=0;return e.map((t=>{const e=t.slice(1).map(Number),[a]=t,o=a.toUpperCase();if(\"M\"===a)return[r,n]=e,s=r,i=n,[\"M\",r,n];let m=[];if(a!==o)switch(o){case\"A\":m=[o,e[0],e[1],e[2],e[3],e[4],e[5]+r,e[6]+n];break;case\"V\":m=[o,e[0]+n];break;case\"H\":m=[o,e[0]+r];break;default:m=[o,...e.map(((t,e)=>t+(e%2?n:r)))]}else m=[o,...e];const c=m.length;switch(o){case\"Z\":r=s,n=i;break;case\"H\":[,r]=m;break;case\"V\":[,n]=m;break;default:r=m[c-2],n=m[c-1],\"M\"===o&&(s=r,i=n)}return m}))}function A(t){return b(t)&&t.slice(1).every((([t])=>t===t.toLowerCase()))}function N(t){if(A(t))return g(t);const e=M(t);let r=0,n=0,s=0,i=0;return e.map((t=>{const e=t.slice(1).map(Number),[a]=t,o=a.toLowerCase();if(\"M\"===a)return[r,n]=e,s=r,i=n,[\"M\",r,n];let m=[];if(a!==o)switch(o){case\"a\":m=[o,e[0],e[1],e[2],e[3],e[4],e[5]-r,e[6]-n];break;case\"v\":m=[o,e[0]-n];break;case\"h\":m=[o,e[0]-r];break;default:m=[o,...e.map(((t,e)=>t-(e%2?n:r)))]}else\"m\"===a&&(s=e[0]+r,i=e[1]+n),m=[o,...e];const c=m.length;switch(o){case\"z\":r=s,n=i;break;case\"h\":r+=m[1];break;case\"v\":n+=m[1];break;default:r+=m[c-2],n+=m[c-1]}return m}))}function C(t,e,r){if(t[r].length>7){t[r].shift();const n=t[r];let s=r;for(;n.length;)e[r]=\"A\",t.splice(s+=1,0,[\"C\",...n.splice(0,6)]);t.splice(r,1)}}function P(t){return w(t)&&t.every((([t])=>\"ACLMQZ\".includes(t)))}function S(t){return P(t)&&t.every((([t])=>\"MC\".includes(t)))}function k(t,e){const[r]=t,{x1:n,y1:s,x2:i,y2:a}=e,o=t.slice(1).map(Number);let m=t;if(\"TQ\".includes(r)||(e.qx=null,e.qy=null),\"H\"===r)m=[\"L\",t[1],s];else if(\"V\"===r)m=[\"L\",n,t[1]];else if(\"S\"===r){const t=2*n-i,r=2*s-a;e.x1=t,e.y1=r,m=[\"C\",t,r,...o]}else if(\"T\"===r){const t=2*n-e.qx,r=2*s-e.qy;e.qx=t,e.qy=r,m=[\"Q\",t,r,...o]}else if(\"Q\"===r){const[t,r]=o;e.qx=t,e.qy=r}return m}const T={x1:0,y1:0,x2:0,y2:0,x:0,y:0,qx:null,qy:null};function $(t){if(P(t))return g(t);const e=v(t),r={...T},n=e.length;for(let t=0;t<n;t+=1){e[t],e[t]=k(e[t],r);const n=e[t],s=n.length;r.x1=+n[s-2],r.y1=+n[s-1],r.x2=+n[s-4]||r.x1,r.y2=+n[s-3]||r.y1}return e}function E(t,e,r){return{x:t*Math.cos(r)-e*Math.sin(r),y:t*Math.sin(r)+e*Math.cos(r)}}function q(t,e,r,n,s,i,a,o,m,c){let u=t,l=e,h=r,f=n,y=o,x=m;const p=120*Math.PI/180,g=Math.PI/180*(+s||0);let d,b,M,w,v,A=[];if(c)[b,M,w,v]=c;else{d=E(u,l,-g),u=d.x,l=d.y,d=E(y,x,-g),y=d.x,x=d.y;const t=(u-y)/2,e=(l-x)/2;let r=t*t/(h*h)+e*e/(f*f);r>1&&(r=Math.sqrt(r),h*=r,f*=r);const n=h*h,s=f*f,o=(i===a?-1:1)*Math.sqrt(Math.abs((n*s-n*e*e-s*t*t)/(n*e*e+s*t*t)));w=o*h*e/f+(u+y)/2,v=o*-f*t/h+(l+x)/2,b=Math.asin(((l-v)/f*10**9>>0)/10**9),M=Math.asin(((x-v)/f*10**9>>0)/10**9),b=u<w?Math.PI-b:b,M=y<w?Math.PI-M:M,b<0&&(b=2*Math.PI+b),M<0&&(M=2*Math.PI+M),a&&b>M&&(b-=2*Math.PI),!a&&M>b&&(M-=2*Math.PI)}let N=M-b;if(Math.abs(N)>p){const t=M,e=y,r=x;M=b+p*(a&&M>b?1:-1),y=w+h*Math.cos(M),x=v+f*Math.sin(M),A=q(y,x,h,f,s,0,a,e,r,[M,t,w,v])}N=M-b;const C=Math.cos(b),P=Math.sin(b),S=Math.cos(M),k=Math.sin(M),T=Math.tan(N/4),$=4/3*h*T,O=4/3*f*T,V=[u,l],j=[u+$*P,l-O*C],L=[y+$*k,x-O*S],I=[y,x];if(j[0]=2*V[0]-j[0],j[1]=2*V[1]-j[1],c)return[...j,...L,...I,...A];A=[...j,...L,...I,...A];const z=[];for(let t=0,e=A.length;t<e;t+=1)z[t]=t%2?E(A[t-1],A[t],g).y:E(A[t],A[t+1],g).x;return z}function O(t,e,r,n,s,i){const a=1/3,o=2/3;return[a*t+o*r,a*e+o*n,a*s+o*r,a*i+o*n,s,i]}function V(t,e,r){const[n,s]=t,[i,a]=e;return[n+(i-n)*r,s+(a-s)*r]}function j(t,e){return Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))}function L(t,e,r,n,s){const i=j([t,e],[r,n]);let a={x:0,y:0};if(\"number\"==typeof s)if(s<=0)a={x:t,y:e};else if(s>=i)a={x:r,y:n};else{const[o,m]=V([t,e],[r,n],s/i);a={x:o,y:m}}return{length:i,point:a,min:{x:Math.min(t,r),y:Math.min(e,n)},max:{x:Math.max(t,r),y:Math.max(e,n)}}}function I(t,e,r,n){const s=.5,i=[t,e],a=[r,n],o=V(i,a,s),m=V(a,o,s),c=V(o,m,s),u=V(m,c,s),l=V(c,u,s),h=L(...[...i,...o,...c,...l,s]).point,f=L(...[...l,...u,...m,...a,0]).point;return[h.x,h.y,f.x,f.y,r,n]}function z(t,e){const[r]=t,n=t.slice(1).map(Number),[s,i]=n;let a;const{x1:o,y1:m,x:c,y:u}=e;switch(\"TQ\".includes(r)||(e.qx=null,e.qy=null),r){case\"M\":return e.x=s,e.y=i,t;case\"A\":return a=[o,m,...n],[\"C\",...q(...a)];case\"Q\":return e.qx=s,e.qy=i,a=[o,m,...n],[\"C\",...O(...a)];case\"L\":return[\"C\",...I(o,m,s,i)];case\"Z\":return[\"C\",...I(o,m,c,u)]}return t}function Z(t){if(S(t))return g(t);const e=$(t),r={...T},n=[];let s=\"\",i=e.length;for(let t=0;t<i;t+=1){[s]=e[t],n[t]=s,e[t]=z(e[t],r),C(e,n,t),i=e.length;const a=e[t],o=a.length;r.x1=+a[o-2],r.y1=+a[o-1],r.x2=+a[o-4]||r.x1,r.y2=+a[o-3]||r.y1}return e}function Q(t,e){let{round:r}=a;if(\"off\"===e||\"off\"===r)return g(t);r=e>=0?e:r;const n=\"number\"==typeof r&&r>=1?10**r:1;return t.map((t=>{const e=t.slice(1).map(Number).map((t=>r?Math.round(t*n)/n:Math.round(t)));return[t[0],...e]}))}function R(t,e){return Q(t,e).map((t=>t[0]+t.slice(1).join(\" \"))).join(\"\")}function F(t){const e=v(t),r=\"Z\"===e.slice(-1)[0][0],n=$(e).map(((t,r)=>{const[n,s]=t.slice(-2).map(Number);return{seg:e[r],n:t,c:e[r][0],x:n,y:s}})).map(((t,e,n)=>{const s=t.seg,i=t.n,a=e&&n[e-1],o=n[e+1],m=t.c,c=n.length,u=e?n[e-1].x:n[c-1].x,l=e?n[e-1].y:n[c-1].y;let h=[];switch(m){case\"M\":h=r?[\"Z\"]:[m,u,l];break;case\"A\":h=[m,...s.slice(1,-3),1===s[5]?0:1,u,l];break;case\"C\":h=o&&\"S\"===o.c?[\"S\",s[1],s[2],u,l]:[m,s[3],s[4],s[1],s[2],u,l];break;case\"S\":h=!a||!\"CS\".includes(a.c)||o&&\"S\"===o.c?[m,i[1],i[2],u,l]:[\"C\",i[3],i[4],i[1],i[2],u,l];break;case\"Q\":h=o&&\"T\"===o.c?[\"T\",u,l]:[m,...s.slice(1,-2),u,l];break;case\"T\":h=!a||!\"QT\".includes(a.c)||o&&\"T\"===o.c?[m,u,l]:[\"Q\",i[1],i[2],u,l];break;case\"Z\":h=[\"M\",u,l];break;case\"H\":h=[m,u];break;case\"V\":h=[m,l];break;default:h=[m,...s.slice(1,-2),u,l]}return h}));return r?n.reverse():[n[0],...n.slice(1).reverse()]}function H(t){const e=[];let r,n=-1;return t.forEach((t=>{\"M\"===t[0]?(r=[t],n+=1):r=[...r,t],e[n]=r})),e}function D(t,e,r,n){const[s]=t,i=t=>Math.round(1e4*t)/1e4,a=t.slice(1).map((t=>+t)),o=e.slice(1).map((t=>+t)),{x1:m,y1:c,x2:u,y2:l,x:h,y:f}=r;let y=t;const[x,p]=o.slice(-2);if(\"TQ\".includes(s)||(r.qx=null,r.qy=null),[\"V\",\"H\",\"S\",\"T\",\"Z\"].includes(s))y=[s,...a];else if(\"L\"===s)i(h)===i(x)?y=[\"V\",p]:i(f)===i(p)&&(y=[\"H\",x]);else if(\"C\"===s){const[t,e]=o;\"CS\".includes(n)&&(i(t)===i(2*m-u)&&i(e)===i(2*c-l)||i(m)===i(2*u-h)&&i(c)===i(2*l-f))&&(y=[\"S\",...o.slice(-4)]),r.x1=t,r.y1=e}else if(\"Q\"===s){const[t,e]=o;r.qx=t,r.qy=e,\"QT\".includes(n)&&(i(t)===i(2*m-u)&&i(e)===i(2*c-l)||i(m)===i(2*u-h)&&i(c)===i(2*l-f))&&(y=[\"T\",...o.slice(-2)])}return y}function X(t,e){const r=v(t),n=$(r),s={...T},i=[],a=r.length;let o=\"\",m=\"\",c=0,u=0,l=0,h=0;for(let t=0;t<a;t+=1){[o]=r[t],i[t]=o,t&&(m=i[t-1]),r[t]=D(r[t],n[t],s,m);const e=r[t],a=e.length;switch(s.x1=+e[a-2],s.y1=+e[a-1],s.x2=+e[a-4]||s.x1,s.y2=+e[a-3]||s.y1,o){case\"Z\":c=l,u=h;break;case\"H\":[,c]=e;break;case\"V\":[,u]=e;break;default:[c,u]=e.slice(-2).map(Number),\"M\"===o&&(l=c,h=u)}s.x=c,s.y=u}const f=Q(r,e),y=Q(N(r),e);return f.map(((t,e)=>e?t.join(\"\").length<y[e].join(\"\").length?t:y[e]:t))}function Y(t){const e=new st,r=Array.from(t);if(!r.every((t=>!Number.isNaN(t))))throw TypeError(`CSSMatrix: \"${t}\" must only have numbers.`);if(16===r.length){const[t,n,s,i,a,o,m,c,u,l,h,f,y,x,p,g]=r;e.m11=t,e.a=t,e.m21=a,e.c=a,e.m31=u,e.m41=y,e.e=y,e.m12=n,e.b=n,e.m22=o,e.d=o,e.m32=l,e.m42=x,e.f=x,e.m13=s,e.m23=m,e.m33=h,e.m43=p,e.m14=i,e.m24=c,e.m34=f,e.m44=g}else{if(6!==r.length)throw new TypeError(\"CSSMatrix: expecting an Array of 6/16 values.\");{const[t,n,s,i,a,o]=r;e.m11=t,e.a=t,e.m12=n,e.b=n,e.m21=s,e.c=s,e.m22=i,e.d=i,e.m41=a,e.e=a,e.m42=o,e.f=o}}return e}function B(t){const e=Object.keys(new st);if(\"object\"==typeof t&&e.every((e=>e in t)))return Y([t.m11,t.m12,t.m13,t.m14,t.m21,t.m22,t.m23,t.m24,t.m31,t.m32,t.m33,t.m34,t.m41,t.m42,t.m43,t.m44]);throw TypeError(`CSSMatrix: \"${JSON.stringify(t)}\" is not a DOMMatrix / CSSMatrix / JSON compatible object.`)}\n/**\n * Creates a new mutable `CSSMatrix` given any valid CSS transform string,\n * or what we call `TransformList`:\n *\n * * `matrix(a, b, c, d, e, f)` - valid matrix() transform function\n * * `matrix3d(m11, m12, m13, ...m44)` - valid matrix3d() transform function\n * * `translate(tx, ty) rotateX(alpha)` - any valid transform function(s)\n *\n * @copyright thednp © 2021\n *\n * @param {string} source valid CSS transform string syntax.\n * @return {CSSMatrix} the resulted matrix.\n */function J(t){if(\"string\"!=typeof t)throw TypeError(`CSSMatrix: \"${t}\" is not a string.`);const e=String(t).replace(/\\s/g,\"\");let r=new st;const n=`CSSMatrix: invalid transform string \"${t}\"`;return e.split(\")\").filter((t=>t)).forEach((t=>{const[e,s]=t.split(\"(\");if(!s)throw TypeError(n);const i=s.split(\",\").map((t=>t.includes(\"rad\")?parseFloat(t)*(180/Math.PI):parseFloat(t))),[a,o,m,c]=i,u=[a,o,m],l=[a,o,m,c];if(\"perspective\"===e&&a&&[o,m].every((t=>void 0===t)))r.m34=-1/a;else if(e.includes(\"matrix\")&&[6,16].includes(i.length)&&i.every((t=>!Number.isNaN(+t)))){const t=i.map((t=>Math.abs(t)<1e-6?0:t));r=r.multiply(Y(t))}else if(\"translate3d\"===e&&u.every((t=>!Number.isNaN(+t))))r=r.translate(a,o,m);else if(\"translate\"===e&&a&&void 0===m)r=r.translate(a,o||0,0);else if(\"rotate3d\"===e&&l.every((t=>!Number.isNaN(+t)))&&c)r=r.rotateAxisAngle(a,o,m,c);else if(\"rotate\"===e&&a&&[o,m].every((t=>void 0===t)))r=r.rotate(0,0,a);else if(\"scale3d\"===e&&u.every((t=>!Number.isNaN(+t)))&&u.some((t=>1!==t)))r=r.scale(a,o,m);else if(\"scale\"!==e||Number.isNaN(a)||1===a||void 0!==m)if(\"skew\"===e&&(a||!Number.isNaN(a)&&o)&&void 0===m)r=r.skew(a,o||0);else{if(!(/[XYZ]/.test(e)&&a&&[o,m].every((t=>void 0===t))&&[\"translate\",\"rotate\",\"scale\",\"skew\"].some((t=>e.includes(t)))))throw TypeError(n);if([\"skewX\",\"skewY\"].includes(e))r=r[e](a);else{const t=e.replace(/[XYZ]/,\"\"),n=e.replace(t,\"\"),s=[\"X\",\"Y\",\"Z\"].indexOf(n),i=\"scale\"===t?1:0,o=[0===s?a:i,1===s?a:i,2===s?a:i];r=r[t](...o)}}else{const t=Number.isNaN(+o)?a:o;r=r.scale(a,t,1)}})),r}function G(t,e){return e?[t.a,t.b,t.c,t.d,t.e,t.f]:[t.m11,t.m12,t.m13,t.m14,t.m21,t.m22,t.m23,t.m24,t.m31,t.m32,t.m33,t.m34,t.m41,t.m42,t.m43,t.m44]}function U(t,e,r){const n=new st;return n.m41=t,n.e=t,n.m42=e,n.f=e,n.m43=r,n}function K(t,e,r){const n=new st,s=Math.PI/180,i=t*s,a=e*s,o=r*s,m=Math.cos(i),c=-Math.sin(i),u=Math.cos(a),l=-Math.sin(a),h=Math.cos(o),f=-Math.sin(o),y=u*h,x=-u*f;n.m11=y,n.a=y,n.m12=x,n.b=x,n.m13=l;const p=c*l*h+m*f;n.m21=p,n.c=p;const g=m*h-c*l*f;return n.m22=g,n.d=g,n.m23=-c*u,n.m31=c*f-m*l*h,n.m32=c*h+m*l*f,n.m33=m*u,n}function W(t,e,r,n){const s=new st,i=Math.sqrt(t*t+e*e+r*r);if(0===i)return s;const a=t/i,o=e/i,m=r/i,c=n*(Math.PI/360),u=Math.sin(c),l=Math.cos(c),h=u*u,f=a*a,y=o*o,x=m*m,p=1-2*(y+x)*h;s.m11=p,s.a=p;const g=2*(a*o*h+m*u*l);s.m12=g,s.b=g,s.m13=2*(a*m*h-o*u*l);const d=2*(o*a*h-m*u*l);s.m21=d,s.c=d;const b=1-2*(x+f)*h;return s.m22=b,s.d=b,s.m23=2*(o*m*h+a*u*l),s.m31=2*(m*a*h+o*u*l),s.m32=2*(m*o*h-a*u*l),s.m33=1-2*(f+y)*h,s}function _(t,e,r){const n=new st;return n.m11=t,n.a=t,n.m22=e,n.d=e,n.m33=r,n}function tt(t,e){const r=new st;if(t){const e=t*Math.PI/180,n=Math.tan(e);r.m21=n,r.c=n}if(e){const t=e*Math.PI/180,n=Math.tan(t);r.m12=n,r.b=n}return r}function et(t){return tt(t,0)}function rt(t){return tt(0,t)}function nt(t,e){return Y([e.m11*t.m11+e.m12*t.m21+e.m13*t.m31+e.m14*t.m41,e.m11*t.m12+e.m12*t.m22+e.m13*t.m32+e.m14*t.m42,e.m11*t.m13+e.m12*t.m23+e.m13*t.m33+e.m14*t.m43,e.m11*t.m14+e.m12*t.m24+e.m13*t.m34+e.m14*t.m44,e.m21*t.m11+e.m22*t.m21+e.m23*t.m31+e.m24*t.m41,e.m21*t.m12+e.m22*t.m22+e.m23*t.m32+e.m24*t.m42,e.m21*t.m13+e.m22*t.m23+e.m23*t.m33+e.m24*t.m43,e.m21*t.m14+e.m22*t.m24+e.m23*t.m34+e.m24*t.m44,e.m31*t.m11+e.m32*t.m21+e.m33*t.m31+e.m34*t.m41,e.m31*t.m12+e.m32*t.m22+e.m33*t.m32+e.m34*t.m42,e.m31*t.m13+e.m32*t.m23+e.m33*t.m33+e.m34*t.m43,e.m31*t.m14+e.m32*t.m24+e.m33*t.m34+e.m34*t.m44,e.m41*t.m11+e.m42*t.m21+e.m43*t.m31+e.m44*t.m41,e.m41*t.m12+e.m42*t.m22+e.m43*t.m32+e.m44*t.m42,e.m41*t.m13+e.m42*t.m23+e.m43*t.m33+e.m44*t.m43,e.m41*t.m14+e.m42*t.m24+e.m43*t.m34+e.m44*t.m44])}class st{constructor(...t){const e=this;if(e.a=1,e.b=0,e.c=0,e.d=1,e.e=0,e.f=0,e.m11=1,e.m12=0,e.m13=0,e.m14=0,e.m21=0,e.m22=1,e.m23=0,e.m24=0,e.m31=0,e.m32=0,e.m33=1,e.m34=0,e.m41=0,e.m42=0,e.m43=0,e.m44=1,t.length){const r=[16,6].some((e=>e===t.length))?t:t[0];return e.setMatrixValue(r)}return e}get isIdentity(){const t=this;return 1===t.m11&&0===t.m12&&0===t.m13&&0===t.m14&&0===t.m21&&1===t.m22&&0===t.m23&&0===t.m24&&0===t.m31&&0===t.m32&&1===t.m33&&0===t.m34&&0===t.m41&&0===t.m42&&0===t.m43&&1===t.m44}get is2D(){const t=this;return 0===t.m31&&0===t.m32&&1===t.m33&&0===t.m34&&0===t.m43&&1===t.m44}setMatrixValue(t){return\"string\"==typeof t&&t.length&&\"none\"!==t?J(t):[Array,Float64Array,Float32Array].some((e=>t instanceof e))?Y(t):[st,DOMMatrix,Object].some((e=>t instanceof e))?B(t):this}toFloat32Array(t){return Float32Array.from(G(this,t))}toFloat64Array(t){return Float64Array.from(G(this,t))}toString(){const{is2D:t}=this;return`${t?\"matrix\":\"matrix3d\"}(${this.toFloat64Array(t).join(\", \")})`}toJSON(){const{is2D:t,isIdentity:e}=this;return{...this,is2D:t,isIdentity:e}}multiply(t){return nt(this,t)}translate(t,e,r){let n=e,s=r;return void 0===n&&(n=0),void 0===s&&(s=0),nt(this,U(t,n,s))}scale(t,e,r){let n=e,s=r;return void 0===n&&(n=t),void 0===s&&(s=1),nt(this,_(t,n,s))}rotate(t,e,r){let n=t,s=e||0,i=r||0;return\"number\"==typeof t&&void 0===e&&void 0===r&&(i=n,n=0,s=0),nt(this,K(n,s,i))}rotateAxisAngle(t,e,r,n){if([t,e,r,n].some((t=>Number.isNaN(+t))))throw new TypeError(\"CSSMatrix: expecting 4 values\");return nt(this,W(t,e,r,n))}skewX(t){return nt(this,et(t))}skewY(t){return nt(this,rt(t))}skew(t,e){return nt(this,tt(t,e))}transformPoint(t){const e=this,r=e.m11*t.x+e.m21*t.y+e.m31*t.z+e.m41*t.w,n=e.m12*t.x+e.m22*t.y+e.m32*t.z+e.m42*t.w,s=e.m13*t.x+e.m23*t.y+e.m33*t.z+e.m43*t.w,i=e.m14*t.x+e.m24*t.y+e.m34*t.z+e.m44*t.w;return t instanceof DOMPoint?new DOMPoint(r,n,s,i):{x:r,y:n,z:s,w:i}}}Object.assign(st,{Translate:U,Rotate:K,RotateAxisAngle:W,Scale:_,SkewX:et,SkewY:rt,Skew:tt,Multiply:nt,fromArray:Y,fromMatrix:B,fromString:J,toArray:G});function it(t,e,r){const[n,s,i]=r,[a,o,m]=\n/**\n * Transforms a specified point using a matrix, returning a new\n * Tuple *Object* comprising of the transformed point.\n * Neither the matrix nor the original point are altered.\n *\n * @copyright thednp © 2021\n *\n * @param {SVGPath.CSSMatrix} M CSSMatrix instance\n * @param {[number, number, number, number]} v Tuple\n * @return {[number, number, number, number]} the resulting Tuple\n */\nfunction(t,e){let r=U(...e);return[,,,r.m44]=e,r=t.multiply(r),[r.m41,r.m42,r.m43,r.m44]}(t,[...e,0,1]),c=o-s,u=m-i;return[(a-n)*(Math.abs(i)/Math.abs(u)||1)+n,c*(Math.abs(i)/Math.abs(u)||1)+s]}function at(t,e){let r,n,s,i,o,m,c=0,u=0;const l=v(t),h=e&&Object.keys(e);if(!e||!h.length)return g(l);const f=$(l);if(!e.origin){const{origin:t}=a;Object.assign(e,{origin:t})}const y=function(t){let e=new st;const{origin:r}=t,[n,s]=r,{translate:i}=t,{rotate:a}=t,{skew:o}=t,{scale:m}=t;return Array.isArray(i)&&i.every((t=>!Number.isNaN(+t)))&&i.some((t=>0!==t))?e=e.translate(...i):\"number\"!=typeof i||Number.isNaN(i)||(e=e.translate(i)),(a||o||m)&&(e=e.translate(n,s),Array.isArray(a)&&a.every((t=>!Number.isNaN(+t)))&&a.some((t=>0!==t))?e=e.rotate(...a):\"number\"!=typeof a||Number.isNaN(a)||(e=e.rotate(a)),Array.isArray(o)&&o.every((t=>!Number.isNaN(+t)))&&o.some((t=>0!==t))?(e=o[0]?e.skewX(o[0]):e,e=o[1]?e.skewY(o[1]):e):\"number\"!=typeof o||Number.isNaN(o)||(e=e.skewX(o)),Array.isArray(m)&&m.every((t=>!Number.isNaN(+t)))&&m.some((t=>1!==t))?e=e.scale(...m):\"number\"!=typeof m||Number.isNaN(m)||(e=e.scale(m)),e=e.translate(-n,-s)),e}(e),{origin:x}=e,p={...T};let d=[],b=0,M=\"\",w=[];const A=[];if(!y.isIdentity){for(r=0,s=l.length;r<s;r+=1){d=l[r],l[r]&&([M]=d),A[r]=M,\"A\"===M&&(d=z(f[r],p),l[r]=z(f[r],p),C(l,A,r),f[r]=z(f[r],p),C(f,A,r),s=Math.max(l.length,f.length)),d=f[r],b=d.length,p.x1=+d[b-2],p.y1=+d[b-1],p.x2=+d[b-4]||p.x1,p.y2=+d[b-3]||p.y1;const t={s:l[r],c:l[r][0],x:p.x1,y:p.y1};w=[...w,t]}return w.map((t=>{switch(M=t.c,d=t.s,M){case\"L\":case\"H\":case\"V\":return[o,m]=it(y,[t.x,t.y],x),c!==o&&u!==m?d=[\"L\",o,m]:u===m?d=[\"H\",o]:c===o&&(d=[\"V\",m]),c=o,u=m,d;default:for(n=1,i=d.length;n<i;n+=2)[c,u]=it(y,[+d[n],+d[n+1]],x),d[n]=c,d[n+1]=u;return d}}))}return g(l)}function ot(t,e){const{x:r,y:n}=t,{x:s,y:i}=e,a=r*s+n*i,o=Math.sqrt((r**2+n**2)*(s**2+i**2));return(r*i-n*s<0?-1:1)*Math.acos(a/o)}function mt(t,e,r,n,s,i,a,o,m,c){const{abs:u,sin:l,cos:h,sqrt:f,PI:y}=Math;let x=u(r),p=u(n);const g=(s%360+360)%360*(y/180);if(t===o&&e===m)return{x:t,y:e};if(0===x||0===p)return L(t,e,o,m,c).point;const d=(t-o)/2,b=(e-m)/2,M=h(g)*d+l(g)*b,w=-l(g)*d+h(g)*b,v=M**2/x**2+w**2/p**2;v>1&&(x*=f(v),p*=f(v));let A=(x**2*p**2-x**2*w**2-p**2*M**2)/(x**2*w**2+p**2*M**2);A=A<0?0:A;const N=(i!==a?1:-1)*f(A),C=N*(x*w/p),P=N*(-p*M/x),S=h(g)*C-l(g)*P+(t+o)/2,k=l(g)*C+h(g)*P+(e+m)/2,T={x:(M-C)/x,y:(w-P)/p},$=ot({x:1,y:0},T);let E=ot(T,{x:(-M-C)/x,y:(-w-P)/p});!a&&E>0?E-=2*y:a&&E<0&&(E+=2*y),E%=2*y;const q=$+E*c,O=x*h(q),V=p*l(q);return{x:h(g)*O-l(g)*V+S,y:l(g)*O+h(g)*V+k}}function ct(t,e,r,n,s,i,a,o,m,c){const u=\"number\"==typeof c;let l=t,h=e,f=0,y=[l,h,f],x=[l,h],p=0,g={x:0,y:0},d=[{x:l,y:h}];u&&c<=0&&(g={x:l,y:h});for(let b=0;b<=300;b+=1){if(p=b/300,({x:l,y:h}=mt(t,e,r,n,s,i,a,o,m,p)),d=[...d,{x:l,y:h}],f+=j(x,[l,h]),x=[l,h],u&&f>c&&c>y[2]){const t=(f-c)/(f-y[2]);g={x:x[0]*(1-t)+y[0]*t,y:x[1]*(1-t)+y[1]*t}}y=[l,h,f]}return u&&c>=f&&(g={x:o,y:m}),{length:f,point:g,min:{x:Math.min(...d.map((t=>t.x))),y:Math.min(...d.map((t=>t.y)))},max:{x:Math.max(...d.map((t=>t.x))),y:Math.max(...d.map((t=>t.y)))}}}function ut(t,e,r,n,s,i,a,o,m){const c=1-m;return{x:c**3*t+3*c**2*m*r+3*c*m**2*s+m**3*a,y:c**3*e+3*c**2*m*n+3*c*m**2*i+m**3*o}}function lt(t,e,r,n,s,i,a,o,m){const c=\"number\"==typeof m;let u=t,l=e,h=0,f=[u,l,h],y=[u,l],x=0,p={x:0,y:0},g=[{x:u,y:l}];c&&m<=0&&(p={x:u,y:l});for(let d=0;d<=300;d+=1){if(x=d/300,({x:u,y:l}=ut(t,e,r,n,s,i,a,o,x)),g=[...g,{x:u,y:l}],h+=j(y,[u,l]),y=[u,l],c&&h>m&&m>f[2]){const t=(h-m)/(h-f[2]);p={x:y[0]*(1-t)+f[0]*t,y:y[1]*(1-t)+f[1]*t}}f=[u,l,h]}return c&&m>=h&&(p={x:a,y:o}),{length:h,point:p,min:{x:Math.min(...g.map((t=>t.x))),y:Math.min(...g.map((t=>t.y)))},max:{x:Math.max(...g.map((t=>t.x))),y:Math.max(...g.map((t=>t.y)))}}}function ht(t,e,r,n,s,i,a){const o=1-a;return{x:o**2*t+2*o*a*r+a**2*s,y:o**2*e+2*o*a*n+a**2*i}}function ft(t,e,r,n,s,i,a){const o=\"number\"==typeof a;let m=t,c=e,u=0,l=[m,c,u],h=[m,c],f=0,y={x:0,y:0},x=[{x:m,y:c}];o&&a<=0&&(y={x:m,y:c});for(let p=0;p<=300;p+=1){if(f=p/300,({x:m,y:c}=ht(t,e,r,n,s,i,f)),x=[...x,{x:m,y:c}],u+=j(h,[m,c]),h=[m,c],o&&u>a&&a>l[2]){const t=(u-a)/(u-l[2]);y={x:h[0]*(1-t)+l[0]*t,y:h[1]*(1-t)+l[1]*t}}l=[m,c,u]}return o&&a>=u&&(y={x:s,y:i}),{length:u,point:y,min:{x:Math.min(...x.map((t=>t.x))),y:Math.min(...x.map((t=>t.y)))},max:{x:Math.max(...x.map((t=>t.x))),y:Math.max(...x.map((t=>t.y)))}}}function yt(t,e){const r=$(t),n=\"number\"==typeof e;let s,i,a,o=[],m=0,c=0,u=0,l=0,h=[],f=[],y=0,x={x:0,y:0},p=x,g=x,d=x,b=0;for(let t=0,M=r.length;t<M;t+=1)a=r[t],[i]=a,s=\"M\"===i,o=s?o:[m,c,...a.slice(1)],s?([,u,l]=a,x={x:u,y:l},p=x,y=0,n&&e<.001&&(d=x)):\"L\"===i?({length:y,min:x,max:p,point:g}=L(...o,(e||0)-b)):\"A\"===i?({length:y,min:x,max:p,point:g}=ct(...o,(e||0)-b)):\"C\"===i?({length:y,min:x,max:p,point:g}=lt(...o,(e||0)-b)):\"Q\"===i?({length:y,min:x,max:p,point:g}=ft(...o,(e||0)-b)):\"Z\"===i&&(o=[m,c,u,l],({length:y,min:x,max:p,point:g}=L(...o,(e||0)-b))),n&&b<e&&b+y>=e&&(d=g),f=[...f,p],h=[...h,x],b+=y,[m,c]=\"Z\"!==i?a.slice(-2):[u,l];return n&&e>=b&&(d={x:m,y:c}),{length:b,point:d,min:{x:Math.min(...h.map((t=>t.x))),y:Math.min(...h.map((t=>t.y)))},max:{x:Math.max(...f.map((t=>t.x))),y:Math.max(...f.map((t=>t.y)))}}}function xt(t){if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0,cx:0,cy:0,cz:0};const{min:{x:e,y:r},max:{x:n,y:s}}=yt(t),i=n-e,a=s-r;return{width:i,height:a,x:e,y:r,x2:n,y2:s,cx:e+i/2,cy:r+a/2,cz:Math.max(i,a)+Math.min(i,a)/2}}function pt(t){return yt(t).length}function gt(t,e){return yt(t,e).point}Object.assign(st,{Version:\"1.0.3\"});class dt{constructor(t,e){const r=e||{},n=void 0===t;if(n||!t.length)throw TypeError(`${c}: \"pathValue\" is ${n?\"undefined\":\"empty\"}`);const s=M(t);if(\"string\"==typeof s)throw TypeError(s);this.segments=s;const{width:i,height:o,cx:m,cy:u,cz:l}=this.getBBox(),{round:h,origin:f}=r;let y,x;if(\"auto\"===h){const t=`${Math.floor(Math.max(i,o))}`.length;y=t>=4?0:4-t}else Number.isInteger(h)||\"off\"===h?y=h:({round:y}=a);if(Array.isArray(f)&&f.length>=2){const[t,e,r]=f.map(Number);x=[Number.isNaN(t)?m:t,Number.isNaN(e)?u:e,Number.isNaN(r)?l:r]}else x=[m,u,l];return this.round=y,this.origin=x,this}getBBox(){return xt(this.segments)}getTotalLength(){return pt(this.segments)}getPointAtLength(t){return gt(this.segments,t)}toAbsolute(){const{segments:t}=this;return this.segments=v(t),this}toRelative(){const{segments:t}=this;return this.segments=N(t),this}toCurve(){const{segments:t}=this;return this.segments=Z(t),this}reverse(t){this.toAbsolute();const{segments:e}=this,r=H(e),n=r.length>1?r:0,s=n&&g(n).map(((e,r)=>t?r?F(e):M(e):F(e)));let i=[];return i=n?s.flat(1):t?e:F(e),this.segments=g(i),this}normalize(){const{segments:t}=this;return this.segments=$(t),this}optimize(){const{segments:t}=this;return this.segments=X(t,this.round),this}transform(t){if(!t||\"object\"!=typeof t||\"object\"==typeof t&&![\"translate\",\"rotate\",\"skew\",\"scale\"].some((e=>e in t)))return this;const e={};Object.keys(t).forEach((r=>{e[r]=Array.isArray(t[r])?[...t[r]]:Number(t[r])}));const{segments:r}=this,[n,s,i]=this.origin,{origin:a}=e;if(Array.isArray(a)&&a.length>=2){const[t,r,o]=a.map(Number);e.origin=[Number.isNaN(t)?n:t,Number.isNaN(r)?s:r,o||i]}else e.origin=[n,s,i];return this.segments=at(r,e),this}flipX(){return this.transform({rotate:[0,180,0]}),this}flipY(){return this.transform({rotate:[180,0,0]}),this}toString(){return R(this.segments,this.round)}}function bt(t){let e=0,r=0,n=0;return Z(t).map((t=>\"M\"===t[0]?([,e,r]=t,0):(n=function(t,e,r,n,s,i,a,o){return 3*((o-e)*(r+s)-(a-t)*(n+i)+n*(t-s)-r*(e-i)+o*(s+t/3)-a*(i+e/3))/20}(e,r,...t.slice(1)),[e,r]=t.slice(-2),n))).reduce(((t,e)=>t+e),0)}function Mt(t,e){const r=M(t);if(\"string\"==typeof r)throw TypeError(r);let n=[...r],s=pt(n),i=n.length-1,a=0,o=0,m=r[0];const[c,u]=m.slice(-2),l={x:c,y:u};if(i<=0||!e||!Number.isFinite(e))return{segment:m,index:0,length:o,point:l,lengthAtSegment:a};if(e>=s)return n=r.slice(0,-1),a=pt(n),o=s-a,{segment:r[i],index:i,length:o,lengthAtSegment:a};const h=[];for(;i>0;)m=n[i],n=n.slice(0,-1),a=pt(n),o=s-a,s=a,h.push({segment:m,index:i,length:o,lengthAtSegment:a}),i-=1;return h.find((({lengthAtSegment:t})=>t<=e))}function wt(t,e){const r=M(t),n=$(r),s=pt(r),i=t=>{const r=t.x-e.x,n=t.y-e.y;return r*r+n*n};let a,o,m,c,u=8,l=0,h=0,f=1/0;for(let t=0;t<=s;t+=u)a=gt(n,t),l=i(a),l<f&&(o=a,h=t,f=l);u/=2;let y=0,x=0,p=0,g=0;for(;u>.5;)y=h-u,m=gt(n,y),p=i(m),x=h+u,c=gt(n,x),g=i(c),y>=0&&p<f?(o=m,h=y,f=p):x<=s&&g<f?(o=c,h=x,f=g):u/=2;const d=Mt(r,h);return{closest:o,distance:Math.sqrt(f),segment:d}}function vt(t){if(\"string\"!=typeof t)return!1;const e=new d(t);for(y(e);e.index<e.max&&!e.err.length;)p(e);return!e.err.length&&\"mM\".includes(e.segments[0][0])}const At={line:[\"x1\",\"y1\",\"x2\",\"y2\"],circle:[\"cx\",\"cy\",\"r\"],ellipse:[\"cx\",\"cy\",\"rx\",\"ry\"],rect:[\"width\",\"height\",\"x\",\"y\",\"rx\",\"ry\"],polygon:[\"points\"],polyline:[\"points\"],glyph:[\"d\"]};const Nt={CSSMatrix:st,parsePathString:M,isPathArray:b,isCurveArray:S,isAbsoluteArray:w,isRelativeArray:A,isNormalizedArray:P,isValidPath:vt,pathToAbsolute:v,pathToRelative:N,pathToCurve:Z,pathToString:R,getDrawDirection:function(t){return bt(Z(t))>=0},getPathArea:bt,getPathBBox:xt,pathLengthFactory:yt,getTotalLength:pt,getPointAtLength:gt,getClosestPoint:function(t,e){return wt(t,e).closest},getSegmentOfPoint:function(t,e){return wt(t,e).segment},getPropertiesAtPoint:wt,getPropertiesAtLength:Mt,getSegmentAtLength:function(t,e){return Mt(t,e).segment},isPointInStroke:function(t,e){const{distance:r}=wt(t,e);return Math.abs(r)<.001},clonePath:g,splitPath:H,fixPath:function(t){const e=M(t),r=$(e),{length:n}=e,s=\"Z\"===r.slice(-1)[0][0],i=s?n-2:n-1,[a,o]=r[0].slice(1),[m,c]=r[i].slice(-2);return s&&a===m&&o===c?e.slice(0,-1):e},roundPath:Q,optimizePath:X,reverseCurve:function(t){const e=t.slice(1).map(((e,r,n)=>r?[...n[r-1].slice(-2),...e.slice(1)]:[...t[0].slice(1),...e.slice(1)])).map((t=>t.map(((e,r)=>t[t.length-r-2*(1-r%2)])))).reverse();return[[\"M\",...e[0].slice(0,2)],...e.map((t=>[\"C\",...t.slice(2)]))]},reversePath:F,normalizePath:$,transformPath:at,shapeToPath:function(t,e){const r=Object.keys(At),{tagName:n}=t;if(n&&!r.some((t=>n===t)))throw TypeError(`${c}: \"${n}\" is not SVGElement`);const s=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\"),i=n||t.type,o={};o.type=i;const m=At[i];let u;n?(m.forEach((e=>{o[e]=t.getAttribute(e)})),Object.values(t.attributes).forEach((({name:t,value:e})=>{m.includes(t)||s.setAttribute(t,e)}))):(Object.assign(o,t),Object.keys(o).forEach((t=>{m.includes(t)||\"type\"===t||s.setAttribute(t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`)),o[t])})));const{round:l}=a;return\"circle\"===i?u=R(function(t){const{cx:e,cy:r,r:n}=t;return[[\"M\",e-n,r],[\"a\",n,n,0,1,0,2*n,0],[\"a\",n,n,0,1,0,-2*n,0]]}(o),l):\"ellipse\"===i?u=R(function(t){const{cx:e,cy:r,rx:n,ry:s}=t;return[[\"M\",e-n,r],[\"a\",n,s,0,1,0,2*n,0],[\"a\",n,s,0,1,0,-2*n,0]]}(o),l):[\"polyline\",\"polygon\"].includes(i)?u=R(function(t){const e=[],r=(t.points||\"\").trim().split(/[\\s|,]/).map(Number);let n=0;for(;n<r.length;)e.push([n?\"L\":\"M\",r[n],r[n+1]]),n+=2;return\"polygon\"===t.type?[...e,[\"z\"]]:e}(o),l):\"rect\"===i?u=R(function(t){const e=+t.x||0,r=+t.y||0,n=+t.width,s=+t.height;let i=+t.rx,a=+t.ry;return i||a?(i=i||a,a=a||i,2*i>n&&(i-=(2*i-n)/2),2*a>s&&(a-=(2*a-s)/2),[[\"M\",e+i,r],[\"h\",n-2*i],[\"s\",i,0,i,a],[\"v\",s-2*a],[\"s\",0,a,-i,a],[\"h\",2*i-n],[\"s\",-i,0,-i,-a],[\"v\",2*a-s],[\"s\",0,-a,i,-a]]):[[\"M\",e,r],[\"h\",n],[\"v\",s],[\"H\",e],[\"Z\"]]}(o),l):\"line\"===i?u=R(function(t){const{x1:e,y1:r,x2:n,y2:s}=t;return[[\"M\",e,r],[\"L\",n,s]]}(o),l):\"glyph\"===i&&(u=n?t.getAttribute(\"d\"):t.d),!!vt(u)&&(s.setAttribute(\"d\",u),e&&n&&(t.before(s,t),t.remove()),s)},options:a};Object.assign(dt,Nt,{Version:\"1.0.5\"});const Ct=t=>null==t,Pt=a=>{const{width:o,height:m,cx:c,cy:u,rx:l,ry:h,startOffset:f,reversed:y,text:x,svgProps:p,ellipseProps:g,textPathProps:d,textProps:b,tspanProps:M}=a,[w,v]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[A]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(`ellipse-id${(0,react__WEBPACK_IMPORTED_MODULE_0__.useId)().replaceAll(\":\",\"-\")}`),N=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();if((0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(N.current){const t={id:A,type:\"ellipse\",rx:l,ry:h,cx:c,cy:u,style:\"fill: none;\",...g},e=N.current,r=dt.shapeToPath(t,!0),n=document.getElementById(A);if(n&&n.remove(),e.prepend(r),y){const t=r.getAttribute(\"d\"),e=dt.reversePath(t),n=dt.pathToString(e);r.setAttribute(\"d\",n)}v(!0)}}),[N.current,y,o,m,p,c,u,l,h,g]),Ct(o))throw new Error(\"ReactCurvedText Error: width is required\");if(Ct(m))throw new Error(\"ReactCurvedText Error: height is required\");if(Ct(c))throw new Error(\"ReactCurvedText Error: cx is required\");if(Ct(u))throw new Error(\"ReactCurvedText Error: cy is required\");if(Ct(l))throw new Error(\"ReactCurvedText Error: rx is required\");if(Ct(h))throw new Error(\"ReactCurvedText Error: ry is required\");if(Ct(x))throw new Error(\"ReactCurvedText Error: text is required\");const C=JSON.stringify({width:o,height:m,cx:c,cy:u,rx:l,ry:h,startOffset:f,reversed:y,text:x,svgProps:p,ellipseProps:g,textPathProps:d,textProps:b,tspanProps:M,rendered:w});return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\",i({ref:N,height:m,width:o},p),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\",i({key:C},b),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"textPath\",i({xlinkHref:`#${A}`,startOffset:f},d),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tspan\",M,x))))};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3QtY3VydmVkLXRleHRAMi4wLjJfcmVhXzIxYWNkZGJiZTEzMGE2Y2E1NWNiMGIzYTBkMDMzZmI2L25vZGVfbW9kdWxlcy9yZWFjdC1jdXJ2ZWQtdGV4dC9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEUsYUFBYSx3REFBd0QsWUFBWSxtQkFBbUIsS0FBSyxtQkFBbUIsc0VBQXNFLFNBQVMseUJBQXlCLFNBQVMsdUJBQXVCLElBQUksNkNBQTZDLGNBQWMsb0RBQW9ELE1BQU0sT0FBTyxHQUFHLEtBQUssb0pBQW9KLEdBQUcsaUNBQWlDLGNBQWMsTUFBTSxvQkFBb0IscUJBQXFCLDZGQUE2RixFQUFFLHNCQUFzQixLQUFLLCtCQUErQixFQUFFLEdBQUcsY0FBYyxvQkFBb0IsNkJBQTZCLGNBQWMsTUFBTSwwQkFBMEIsR0FBRyw4QkFBOEIsaUJBQWlCLEVBQUUsSUFBSSxHQUFHLFdBQVcsRUFBRSxnQ0FBZ0MsaUZBQWlGLFdBQVcsd0VBQXdFLEVBQUUsSUFBSSxHQUFHLFdBQVcsRUFBRSxLQUFLLEtBQUssbUJBQW1CLEtBQUssd0JBQXdCLFdBQVcsa0JBQWtCLFdBQVcsY0FBYyxtQkFBbUIsV0FBVyxrQkFBa0Isb0JBQW9CLGtDQUFrQyxFQUFFLElBQUksR0FBRyxXQUFXLEVBQUUsS0FBSyxLQUFLLDJCQUEyQixpR0FBaUcsRUFBRSxJQUFJLEdBQUcsV0FBVyxFQUFFLEtBQUssS0FBSyw2QkFBNkIsS0FBSyx3QkFBd0IsTUFBTSwwQ0FBMEMsY0FBYyxFQUFFLElBQUksR0FBRyxXQUFXLEVBQUUsS0FBSyxLQUFLLG1CQUFtQixjQUFjLE1BQU0sa0JBQWtCLEdBQUcsS0FBSywrTkFBK04sWUFBWSxNQUFNLGNBQWMsNENBQTRDLGNBQWMsTUFBTSwwQkFBMEIsNkNBQTZDLGdDQUFnQyxhQUFhLGlHQUFpRyxrQkFBa0Isb0NBQW9DLE1BQU0sRUFBRSxZQUFZLElBQUksTUFBTSwwREFBMEQs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c0IsdUZBQXVGLFNBQVMsY0FBYyxNQUFNLGtCQUFrQix1QkFBdUIsMENBQTBDLGVBQWUsSUFBSSxtQ0FBbUMsb0RBQW9ELHFFQUFxRSxnQkFBZ0IsVUFBVSxJQUFJLE1BQU0sUUFBUSxHQUFHLG1DQUFtQyxNQUFNLGNBQWMsR0FBRyxpRUFBaUUscUNBQXFDLE1BQU0sb0JBQW9CLEdBQUcsaUVBQWlFLDBEQUEwRCwrREFBK0QsUUFBUSxLQUFLLFdBQVcsc0NBQXNDLHdDQUF3QyxrQ0FBa0MsaURBQWlELG9CQUFvQiw4T0FBOE8sa0NBQWtDLE1BQU0sb0JBQW9CLEdBQUcsNEJBQTRCLHNIQUFzSCxZQUFZLHFCQUFxQixnQkFBZ0IsRUFBRSwyQkFBMkIsTUFBTSx3SUFBd0ksU0FBUywrQ0FBQyxTQUFTLCtDQUFDLGNBQWMsNENBQUMsdUJBQXVCLEtBQUssNkNBQUMsR0FBRyxHQUFHLGdEQUFDLE9BQU8sY0FBYyxTQUFTLDBEQUEwRCxPQUFPLGlFQUFpRSxpQ0FBaUMscUVBQXFFLHNCQUFzQixPQUFPLG1HQUFtRyxzRUFBc0Usa0VBQWtFLGtFQUFrRSxrRUFBa0Usa0VBQWtFLG9FQUFvRSx3QkFBd0IsbUpBQW1KLEVBQUUsT0FBTywwREFBZSxVQUFVLHVCQUF1QixJQUFJLDBEQUFlLFdBQVcsTUFBTSxJQUFJLDBEQUFlLGVBQWUsY0FBYyxFQUFFLGdCQUFnQixJQUFJLDBEQUFlLGtCQUE4RCIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0LWFwcC1kaXIvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3QtY3VydmVkLXRleHRAMi4wLjJfcmVhXzIxYWNkZGJiZTEzMGE2Y2E1NWNiMGIzYTBkMDMzZmI2L25vZGVfbW9kdWxlcy9yZWFjdC1jdXJ2ZWQtdGV4dC9kaXN0L2luZGV4LmVzLmpzP2ZlMzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHQse3VzZVN0YXRlIGFzIGUsdXNlSWQgYXMgcix1c2VSZWYgYXMgbix1c2VFZmZlY3QgYXMgc31mcm9tXCJyZWFjdFwiO2Z1bmN0aW9uIGkoKXtyZXR1cm4gaT1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciByPWFyZ3VtZW50c1tlXTtmb3IodmFyIG4gaW4gcilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocixuKSYmKHRbbl09cltuXSl9cmV0dXJuIHR9LGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfWNvbnN0IGE9e29yaWdpbjpbMCwwLDBdLHJvdW5kOjR9LG89e2E6NyxjOjYsaDoxLGw6MixtOjIscjo0LHE6NCxzOjQsdDoyLHY6MSx6OjB9O2Z1bmN0aW9uIG0odCl7bGV0IGU9dC5wYXRoVmFsdWVbdC5zZWdtZW50U3RhcnRdLHI9ZS50b0xvd2VyQ2FzZSgpO2NvbnN0e2RhdGE6bn09dDtmb3IoO24ubGVuZ3RoPj1vW3JdJiYoXCJtXCI9PT1yJiZuLmxlbmd0aD4yPyh0LnNlZ21lbnRzLnB1c2goW2UsLi4ubi5zcGxpY2UoMCwyKV0pLHI9XCJsXCIsZT1cIm1cIj09PWU/XCJsXCI6XCJMXCIpOnQuc2VnbWVudHMucHVzaChbZSwuLi5uLnNwbGljZSgwLG9bcl0pXSksb1tyXSk7KTt9Y29uc3QgYz1cIlNWR1BhdGhDb21tYW5kZXIgZXJyb3JcIjtmdW5jdGlvbiB1KHQpe2NvbnN0e2luZGV4OmUscGF0aFZhbHVlOnJ9PXQsbj1yLmNoYXJDb2RlQXQoZSk7cmV0dXJuIDQ4PT09bj8odC5wYXJhbT0wLHZvaWQodC5pbmRleCs9MSkpOjQ5PT09bj8odC5wYXJhbT0xLHZvaWQodC5pbmRleCs9MSkpOnZvaWQodC5lcnI9YCR7Y306IGludmFsaWQgQXJjIGZsYWcgXCIke3JbZV19XCIsIGV4cGVjdGluZyAwIG9yIDEgYXQgaW5kZXggJHtlfWApfWZ1bmN0aW9uIGwodCl7cmV0dXJuIHQ+PTQ4JiZ0PD01N31jb25zdCBoPVwiSW52YWxpZCBwYXRoIHZhbHVlXCI7ZnVuY3Rpb24gZih0KXtjb25zdHttYXg6ZSxwYXRoVmFsdWU6cixpbmRleDpufT10O2xldCBzLGk9bixhPSExLG89ITEsbT0hMSx1PSExO2lmKGk+PWUpdC5lcnI9YCR7Y306ICR7aH0gYXQgaW5kZXggJHtpfSwgXCJwYXRoVmFsdWVcIiBpcyBtaXNzaW5nIHBhcmFtYDtlbHNlIGlmKHM9ci5jaGFyQ29kZUF0KGkpLDQzIT09cyYmNDUhPT1zfHwoaSs9MSxzPXIuY2hhckNvZGVBdChpKSksbChzKXx8NDY9PT1zKXtpZig0NiE9PXMpe2lmKGE9NDg9PT1zLGkrPTEscz1yLmNoYXJDb2RlQXQoaSksYSYmaTxlJiZzJiZsKHMpKXJldHVybiB2b2lkKHQuZXJyPWAke2N9OiAke2h9IGF0IGluZGV4ICR7bn0sIFwiJHtyW25dfVwiIGlsbGVnYWwgbnVtYmVyYCk7Zm9yKDtpPGUmJmwoci5jaGFyQ29kZUF0KGkpKTspaSs9MSxvPSEwO3M9ci5jaGFyQ29kZUF0KGkpfWlmKDQ2PT09cyl7Zm9yKHU9ITAsaSs9MTtsKHIuY2hhckNvZGVBdChpKSk7KWkrPTEsbT0hMDtzPXIuY2hhckNvZGVBdChpKX1pZigxMDE9PT1zfHw2OT09PXMpe2lmKHUmJiFvJiYhbSlyZXR1cm4gdm9pZCh0LmVycj1gJHtjfTogJHtofSBhdCBpbmRleCAke2l9LCBcIiR7cltpXX1cIiBpbnZhbGlkIGZsb2F0IGV4cG9uZW50YCk7aWYoaSs9MSxzPXIuY2hhckNvZGVBdChpKSw0MyE9PXMmJjQ1IT09c3x8KGkrPTEpLCEoaTxlJiZsKHIuY2hhckNvZGVBdChpKSkpKXJldHVybiB2b2lkKHQuZXJyPWAke2N9OiAke2h9IGF0IGluZGV4ICR7aX0sIFwiJHtyW2ldfVwiIGludmFsaWQgaW50ZWdlciBleHBvbmVudGApO2Zvcig7aTxlJiZsKHIuY2hhckNvZGVBdChpKSk7KWkrPTF9dC5pbmRleD1pLHQucGFyYW09K3QucGF0aFZhbHVlLnNsaWNlKG4saSl9ZWxzZSB0LmVycj1gJHtjfTogJHtofSBhdCBpbmRleCAke2l9LCBcIiR7cltpXX1cIiBpcyBub3QgYSBudW1iZXJgfWZ1bmN0aW9uIHkodCl7Y29uc3R7cGF0aFZhbHVlOmUsbWF4OnJ9PXQ7Zm9yKDt0LmluZGV4PHImJigxMD09PShuPWUuY2hhckNvZGVBdCh0LmluZGV4KSl8fDEzPT09bnx8ODIzMj09PW58fDgyMzM9PT1ufHwzMj09PW58fDk9PT1ufHwxMT09PW58fDEyPT09bnx8MTYwPT09bnx8bj49NTc2MCYmWzU3NjAsNjE1OCw4MTkyLDgxOTMsODE5NCw4MTk1LDgxOTYsODE5Nyw4MTk4LDgxOTksODIwMCw4MjAxLDgyMDIsODIzOSw4Mjg3LDEyMjg4LDY1Mjc5XS5pbmNsdWRlcyhuKSk7KXQuaW5kZXgrPTE7dmFyIG59ZnVuY3Rpb24geCh0KXtyZXR1cm4gdD49NDgmJnQ8PTU3fHw0Mz09PXR8fDQ1PT09dHx8NDY9PT10fWZ1bmN0aW9uIHAodCl7Y29uc3R7bWF4OmUscGF0aFZhbHVlOnIsaW5kZXg6bn09dCxzPXIuY2hhckNvZGVBdChuKSxpPW9bcltuXS50b0xvd2VyQ2FzZSgpXTtpZih0LnNlZ21lbnRTdGFydD1uLGZ1bmN0aW9uKHQpe3N3aXRjaCgzMnx0KXtjYXNlIDEwOTpjYXNlIDEyMjpjYXNlIDEwODpjYXNlIDEwNDpjYXNlIDExODpjYXNlIDk5OmNhc2UgMTE1OmNhc2UgMTEzOmNhc2UgMTE2OmNhc2UgOTc6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19KHMpKWlmKHQuaW5kZXgrPTEseSh0KSx0LmRhdGE9W10saSl7Zm9yKDs7KXtmb3IobGV0IG49aTtuPjA7bi09MSl7aWYoOTchPSgzMnxzKXx8MyE9PW4mJjQhPT1uP2YodCk6dSh0KSx0LmVyci5sZW5ndGgpcmV0dXJuO3QuZGF0YS5wdXNoKHQucGFyYW0pLHkodCksdC5pbmRleDxlJiY0ND09PXIuY2hhckNvZGVBdCh0LmluZGV4KSYmKHQuaW5kZXgrPTEseSh0KSl9aWYodC5pbmRleD49dC5tYXgpYnJlYWs7aWYoIXgoci5jaGFyQ29kZUF0KHQuaW5kZXgpKSlicmVha31tKHQpfWVsc2UgbSh0KTtlbHNlIHQuZXJyPWAke2N9OiAke2h9IFwiJHtyW25dfVwiIGlzIG5vdCBhIHBhdGggY29tbWFuZGB9ZnVuY3Rpb24gZyh0KXtyZXR1cm4gdC5tYXAoKHQ9PkFycmF5LmlzQXJyYXkodCk/Wy4uLnRdOnQpKX1mdW5jdGlvbiBkKHQpe3RoaXMuc2VnbWVudHM9W10sdGhpcy5wYXRoVmFsdWU9dCx0aGlzLm1heD10Lmxlbmd0aCx0aGlzLmluZGV4PTAsdGhpcy5wYXJhbT0wLHRoaXMuc2VnbWVudFN0YXJ0PTAsdGhpcy5kYXRhPVtdLHRoaXMuZXJyPVwiXCJ9ZnVuY3Rpb24gYih0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KSYmdC5ldmVyeSgodD0+e2NvbnN0IGU9dFswXS50b0xvd2VyQ2FzZSgpO3JldHVybiBvW2VdPT09dC5sZW5ndGgtMSYmXCJhY2hsbXFzdHZ6XCIuaW5jbHVkZXMoZSl9KSl9ZnVuY3Rpb24gTSh0KXtpZihiKHQpKXJldHVybiBnKHQpO2NvbnN0IGU9bmV3IGQodCk7Zm9yKHkoZSk7ZS5pbmRleDxlLm1heCYmIWUuZXJyLmxlbmd0aDspcChlKTtyZXR1cm4gZS5lcnI/ZS5lcnI6ZS5zZWdtZW50c31mdW5jdGlvbiB3KHQpe3JldHVybiBiKHQpJiZ0LmV2ZXJ5KCgoW3RdKT0+dD09PXQudG9VcHBlckNhc2UoKSkpfWZ1bmN0aW9uIHYodCl7aWYodyh0KSlyZXR1cm4gZyh0KTtjb25zdCBlPU0odCk7bGV0IHI9MCxuPTAscz0wLGk9MDtyZXR1cm4gZS5tYXAoKHQ9Pntjb25zdCBlPXQuc2xpY2UoMSkubWFwKE51bWJlciksW2FdPXQsbz1hLnRvVXBwZXJDYXNlKCk7aWYoXCJNXCI9PT1hKXJldHVybltyLG5dPWUscz1yLGk9bixbXCJNXCIscixuXTtsZXQgbT1bXTtpZihhIT09bylzd2l0Y2gobyl7Y2FzZVwiQVwiOm09W28sZVswXSxlWzFdLGVbMl0sZVszXSxlWzRdLGVbNV0rcixlWzZdK25dO2JyZWFrO2Nhc2VcIlZcIjptPVtvLGVbMF0rbl07YnJlYWs7Y2FzZVwiSFwiOm09W28sZVswXStyXTticmVhaztkZWZhdWx0Om09W28sLi4uZS5tYXAoKCh0LGUpPT50KyhlJTI/bjpyKSkpXX1lbHNlIG09W28sLi4uZV07Y29uc3QgYz1tLmxlbmd0aDtzd2l0Y2gobyl7Y2FzZVwiWlwiOnI9cyxuPWk7YnJlYWs7Y2FzZVwiSFwiOlsscl09bTticmVhaztjYXNlXCJWXCI6WyxuXT1tO2JyZWFrO2RlZmF1bHQ6cj1tW2MtMl0sbj1tW2MtMV0sXCJNXCI9PT1vJiYocz1yLGk9bil9cmV0dXJuIG19KSl9ZnVuY3Rpb24gQSh0KXtyZXR1cm4gYih0KSYmdC5zbGljZSgxKS5ldmVyeSgoKFt0XSk9PnQ9PT10LnRvTG93ZXJDYXNlKCkpKX1mdW5jdGlvbiBOKHQpe2lmKEEodCkpcmV0dXJuIGcodCk7Y29uc3QgZT1NKHQpO2xldCByPTAsbj0wLHM9MCxpPTA7cmV0dXJuIGUubWFwKCh0PT57Y29uc3QgZT10LnNsaWNlKDEpLm1hcChOdW1iZXIpLFthXT10LG89YS50b0xvd2VyQ2FzZSgpO2lmKFwiTVwiPT09YSlyZXR1cm5bcixuXT1lLHM9cixpPW4sW1wiTVwiLHIsbl07bGV0IG09W107aWYoYSE9PW8pc3dpdGNoKG8pe2Nhc2VcImFcIjptPVtvLGVbMF0sZVsxXSxlWzJdLGVbM10sZVs0XSxlWzVdLXIsZVs2XS1uXTticmVhaztjYXNlXCJ2XCI6bT1bbyxlWzBdLW5dO2JyZWFrO2Nhc2VcImhcIjptPVtvLGVbMF0tcl07YnJlYWs7ZGVmYXVsdDptPVtvLC4uLmUubWFwKCgodCxlKT0+dC0oZSUyP246cikpKV19ZWxzZVwibVwiPT09YSYmKHM9ZVswXStyLGk9ZVsxXStuKSxtPVtvLC4uLmVdO2NvbnN0IGM9bS5sZW5ndGg7c3dpdGNoKG8pe2Nhc2VcInpcIjpyPXMsbj1pO2JyZWFrO2Nhc2VcImhcIjpyKz1tWzFdO2JyZWFrO2Nhc2VcInZcIjpuKz1tWzFdO2JyZWFrO2RlZmF1bHQ6cis9bVtjLTJdLG4rPW1bYy0xXX1yZXR1cm4gbX0pKX1mdW5jdGlvbiBDKHQsZSxyKXtpZih0W3JdLmxlbmd0aD43KXt0W3JdLnNoaWZ0KCk7Y29uc3Qgbj10W3JdO2xldCBzPXI7Zm9yKDtuLmxlbmd0aDspZVtyXT1cIkFcIix0LnNwbGljZShzKz0xLDAsW1wiQ1wiLC4uLm4uc3BsaWNlKDAsNildKTt0LnNwbGljZShyLDEpfX1mdW5jdGlvbiBQKHQpe3JldHVybiB3KHQpJiZ0LmV2ZXJ5KCgoW3RdKT0+XCJBQ0xNUVpcIi5pbmNsdWRlcyh0KSkpfWZ1bmN0aW9uIFModCl7cmV0dXJuIFAodCkmJnQuZXZlcnkoKChbdF0pPT5cIk1DXCIuaW5jbHVkZXModCkpKX1mdW5jdGlvbiBrKHQsZSl7Y29uc3Rbcl09dCx7eDE6bix5MTpzLHgyOmkseTI6YX09ZSxvPXQuc2xpY2UoMSkubWFwKE51bWJlcik7bGV0IG09dDtpZihcIlRRXCIuaW5jbHVkZXMocil8fChlLnF4PW51bGwsZS5xeT1udWxsKSxcIkhcIj09PXIpbT1bXCJMXCIsdFsxXSxzXTtlbHNlIGlmKFwiVlwiPT09ciltPVtcIkxcIixuLHRbMV1dO2Vsc2UgaWYoXCJTXCI9PT1yKXtjb25zdCB0PTIqbi1pLHI9MipzLWE7ZS54MT10LGUueTE9cixtPVtcIkNcIix0LHIsLi4ub119ZWxzZSBpZihcIlRcIj09PXIpe2NvbnN0IHQ9MipuLWUucXgscj0yKnMtZS5xeTtlLnF4PXQsZS5xeT1yLG09W1wiUVwiLHQsciwuLi5vXX1lbHNlIGlmKFwiUVwiPT09cil7Y29uc3RbdCxyXT1vO2UucXg9dCxlLnF5PXJ9cmV0dXJuIG19Y29uc3QgVD17eDE6MCx5MTowLHgyOjAseTI6MCx4OjAseTowLHF4Om51bGwscXk6bnVsbH07ZnVuY3Rpb24gJCh0KXtpZihQKHQpKXJldHVybiBnKHQpO2NvbnN0IGU9dih0KSxyPXsuLi5UfSxuPWUubGVuZ3RoO2ZvcihsZXQgdD0wO3Q8bjt0Kz0xKXtlW3RdLGVbdF09ayhlW3RdLHIpO2NvbnN0IG49ZVt0XSxzPW4ubGVuZ3RoO3IueDE9K25bcy0yXSxyLnkxPStuW3MtMV0sci54Mj0rbltzLTRdfHxyLngxLHIueTI9K25bcy0zXXx8ci55MX1yZXR1cm4gZX1mdW5jdGlvbiBFKHQsZSxyKXtyZXR1cm57eDp0Kk1hdGguY29zKHIpLWUqTWF0aC5zaW4ocikseTp0Kk1hdGguc2luKHIpK2UqTWF0aC5jb3Mocil9fWZ1bmN0aW9uIHEodCxlLHIsbixzLGksYSxvLG0sYyl7bGV0IHU9dCxsPWUsaD1yLGY9bix5PW8seD1tO2NvbnN0IHA9MTIwKk1hdGguUEkvMTgwLGc9TWF0aC5QSS8xODAqKCtzfHwwKTtsZXQgZCxiLE0sdyx2LEE9W107aWYoYylbYixNLHcsdl09YztlbHNle2Q9RSh1LGwsLWcpLHU9ZC54LGw9ZC55LGQ9RSh5LHgsLWcpLHk9ZC54LHg9ZC55O2NvbnN0IHQ9KHUteSkvMixlPShsLXgpLzI7bGV0IHI9dCp0LyhoKmgpK2UqZS8oZipmKTtyPjEmJihyPU1hdGguc3FydChyKSxoKj1yLGYqPXIpO2NvbnN0IG49aCpoLHM9ZipmLG89KGk9PT1hPy0xOjEpKk1hdGguc3FydChNYXRoLmFicygobipzLW4qZSplLXMqdCp0KS8obiplKmUrcyp0KnQpKSk7dz1vKmgqZS9mKyh1K3kpLzIsdj1vKi1mKnQvaCsobCt4KS8yLGI9TWF0aC5hc2luKCgobC12KS9mKjEwKio5Pj4wKS8xMCoqOSksTT1NYXRoLmFzaW4oKCh4LXYpL2YqMTAqKjk+PjApLzEwKio5KSxiPXU8dz9NYXRoLlBJLWI6YixNPXk8dz9NYXRoLlBJLU06TSxiPDAmJihiPTIqTWF0aC5QSStiKSxNPDAmJihNPTIqTWF0aC5QSStNKSxhJiZiPk0mJihiLT0yKk1hdGguUEkpLCFhJiZNPmImJihNLT0yKk1hdGguUEkpfWxldCBOPU0tYjtpZihNYXRoLmFicyhOKT5wKXtjb25zdCB0PU0sZT15LHI9eDtNPWIrcCooYSYmTT5iPzE6LTEpLHk9dytoKk1hdGguY29zKE0pLHg9ditmKk1hdGguc2luKE0pLEE9cSh5LHgsaCxmLHMsMCxhLGUscixbTSx0LHcsdl0pfU49TS1iO2NvbnN0IEM9TWF0aC5jb3MoYiksUD1NYXRoLnNpbihiKSxTPU1hdGguY29zKE0pLGs9TWF0aC5zaW4oTSksVD1NYXRoLnRhbihOLzQpLCQ9NC8zKmgqVCxPPTQvMypmKlQsVj1bdSxsXSxqPVt1KyQqUCxsLU8qQ10sTD1beSskKmsseC1PKlNdLEk9W3kseF07aWYoalswXT0yKlZbMF0talswXSxqWzFdPTIqVlsxXS1qWzFdLGMpcmV0dXJuWy4uLmosLi4uTCwuLi5JLC4uLkFdO0E9Wy4uLmosLi4uTCwuLi5JLC4uLkFdO2NvbnN0IHo9W107Zm9yKGxldCB0PTAsZT1BLmxlbmd0aDt0PGU7dCs9MSl6W3RdPXQlMj9FKEFbdC0xXSxBW3RdLGcpLnk6RShBW3RdLEFbdCsxXSxnKS54O3JldHVybiB6fWZ1bmN0aW9uIE8odCxlLHIsbixzLGkpe2NvbnN0IGE9MS8zLG89Mi8zO3JldHVyblthKnQrbypyLGEqZStvKm4sYSpzK28qcixhKmkrbypuLHMsaV19ZnVuY3Rpb24gVih0LGUscil7Y29uc3RbbixzXT10LFtpLGFdPWU7cmV0dXJuW24rKGktbikqcixzKyhhLXMpKnJdfWZ1bmN0aW9uIGoodCxlKXtyZXR1cm4gTWF0aC5zcXJ0KCh0WzBdLWVbMF0pKih0WzBdLWVbMF0pKyh0WzFdLWVbMV0pKih0WzFdLWVbMV0pKX1mdW5jdGlvbiBMKHQsZSxyLG4scyl7Y29uc3QgaT1qKFt0LGVdLFtyLG5dKTtsZXQgYT17eDowLHk6MH07aWYoXCJudW1iZXJcIj09dHlwZW9mIHMpaWYoczw9MClhPXt4OnQseTplfTtlbHNlIGlmKHM+PWkpYT17eDpyLHk6bn07ZWxzZXtjb25zdFtvLG1dPVYoW3QsZV0sW3Isbl0scy9pKTthPXt4Om8seTptfX1yZXR1cm57bGVuZ3RoOmkscG9pbnQ6YSxtaW46e3g6TWF0aC5taW4odCxyKSx5Ok1hdGgubWluKGUsbil9LG1heDp7eDpNYXRoLm1heCh0LHIpLHk6TWF0aC5tYXgoZSxuKX19fWZ1bmN0aW9uIEkodCxlLHIsbil7Y29uc3Qgcz0uNSxpPVt0LGVdLGE9W3Isbl0sbz1WKGksYSxzKSxtPVYoYSxvLHMpLGM9VihvLG0scyksdT1WKG0sYyxzKSxsPVYoYyx1LHMpLGg9TCguLi5bLi4uaSwuLi5vLC4uLmMsLi4ubCxzXSkucG9pbnQsZj1MKC4uLlsuLi5sLC4uLnUsLi4ubSwuLi5hLDBdKS5wb2ludDtyZXR1cm5baC54LGgueSxmLngsZi55LHIsbl19ZnVuY3Rpb24geih0LGUpe2NvbnN0W3JdPXQsbj10LnNsaWNlKDEpLm1hcChOdW1iZXIpLFtzLGldPW47bGV0IGE7Y29uc3R7eDE6byx5MTptLHg6Yyx5OnV9PWU7c3dpdGNoKFwiVFFcIi5pbmNsdWRlcyhyKXx8KGUucXg9bnVsbCxlLnF5PW51bGwpLHIpe2Nhc2VcIk1cIjpyZXR1cm4gZS54PXMsZS55PWksdDtjYXNlXCJBXCI6cmV0dXJuIGE9W28sbSwuLi5uXSxbXCJDXCIsLi4ucSguLi5hKV07Y2FzZVwiUVwiOnJldHVybiBlLnF4PXMsZS5xeT1pLGE9W28sbSwuLi5uXSxbXCJDXCIsLi4uTyguLi5hKV07Y2FzZVwiTFwiOnJldHVybltcIkNcIiwuLi5JKG8sbSxzLGkpXTtjYXNlXCJaXCI6cmV0dXJuW1wiQ1wiLC4uLkkobyxtLGMsdSldfXJldHVybiB0fWZ1bmN0aW9uIFoodCl7aWYoUyh0KSlyZXR1cm4gZyh0KTtjb25zdCBlPSQodCkscj17Li4uVH0sbj1bXTtsZXQgcz1cIlwiLGk9ZS5sZW5ndGg7Zm9yKGxldCB0PTA7dDxpO3QrPTEpe1tzXT1lW3RdLG5bdF09cyxlW3RdPXooZVt0XSxyKSxDKGUsbix0KSxpPWUubGVuZ3RoO2NvbnN0IGE9ZVt0XSxvPWEubGVuZ3RoO3IueDE9K2Fbby0yXSxyLnkxPSthW28tMV0sci54Mj0rYVtvLTRdfHxyLngxLHIueTI9K2Fbby0zXXx8ci55MX1yZXR1cm4gZX1mdW5jdGlvbiBRKHQsZSl7bGV0e3JvdW5kOnJ9PWE7aWYoXCJvZmZcIj09PWV8fFwib2ZmXCI9PT1yKXJldHVybiBnKHQpO3I9ZT49MD9lOnI7Y29uc3Qgbj1cIm51bWJlclwiPT10eXBlb2YgciYmcj49MT8xMCoqcjoxO3JldHVybiB0Lm1hcCgodD0+e2NvbnN0IGU9dC5zbGljZSgxKS5tYXAoTnVtYmVyKS5tYXAoKHQ9PnI/TWF0aC5yb3VuZCh0Km4pL246TWF0aC5yb3VuZCh0KSkpO3JldHVyblt0WzBdLC4uLmVdfSkpfWZ1bmN0aW9uIFIodCxlKXtyZXR1cm4gUSh0LGUpLm1hcCgodD0+dFswXSt0LnNsaWNlKDEpLmpvaW4oXCIgXCIpKSkuam9pbihcIlwiKX1mdW5jdGlvbiBGKHQpe2NvbnN0IGU9dih0KSxyPVwiWlwiPT09ZS5zbGljZSgtMSlbMF1bMF0sbj0kKGUpLm1hcCgoKHQscik9Pntjb25zdFtuLHNdPXQuc2xpY2UoLTIpLm1hcChOdW1iZXIpO3JldHVybntzZWc6ZVtyXSxuOnQsYzplW3JdWzBdLHg6bix5OnN9fSkpLm1hcCgoKHQsZSxuKT0+e2NvbnN0IHM9dC5zZWcsaT10Lm4sYT1lJiZuW2UtMV0sbz1uW2UrMV0sbT10LmMsYz1uLmxlbmd0aCx1PWU/bltlLTFdLng6bltjLTFdLngsbD1lP25bZS0xXS55Om5bYy0xXS55O2xldCBoPVtdO3N3aXRjaChtKXtjYXNlXCJNXCI6aD1yP1tcIlpcIl06W20sdSxsXTticmVhaztjYXNlXCJBXCI6aD1bbSwuLi5zLnNsaWNlKDEsLTMpLDE9PT1zWzVdPzA6MSx1LGxdO2JyZWFrO2Nhc2VcIkNcIjpoPW8mJlwiU1wiPT09by5jP1tcIlNcIixzWzFdLHNbMl0sdSxsXTpbbSxzWzNdLHNbNF0sc1sxXSxzWzJdLHUsbF07YnJlYWs7Y2FzZVwiU1wiOmg9IWF8fCFcIkNTXCIuaW5jbHVkZXMoYS5jKXx8byYmXCJTXCI9PT1vLmM/W20saVsxXSxpWzJdLHUsbF06W1wiQ1wiLGlbM10saVs0XSxpWzFdLGlbMl0sdSxsXTticmVhaztjYXNlXCJRXCI6aD1vJiZcIlRcIj09PW8uYz9bXCJUXCIsdSxsXTpbbSwuLi5zLnNsaWNlKDEsLTIpLHUsbF07YnJlYWs7Y2FzZVwiVFwiOmg9IWF8fCFcIlFUXCIuaW5jbHVkZXMoYS5jKXx8byYmXCJUXCI9PT1vLmM/W20sdSxsXTpbXCJRXCIsaVsxXSxpWzJdLHUsbF07YnJlYWs7Y2FzZVwiWlwiOmg9W1wiTVwiLHUsbF07YnJlYWs7Y2FzZVwiSFwiOmg9W20sdV07YnJlYWs7Y2FzZVwiVlwiOmg9W20sbF07YnJlYWs7ZGVmYXVsdDpoPVttLC4uLnMuc2xpY2UoMSwtMiksdSxsXX1yZXR1cm4gaH0pKTtyZXR1cm4gcj9uLnJldmVyc2UoKTpbblswXSwuLi5uLnNsaWNlKDEpLnJldmVyc2UoKV19ZnVuY3Rpb24gSCh0KXtjb25zdCBlPVtdO2xldCByLG49LTE7cmV0dXJuIHQuZm9yRWFjaCgodD0+e1wiTVwiPT09dFswXT8ocj1bdF0sbis9MSk6cj1bLi4ucix0XSxlW25dPXJ9KSksZX1mdW5jdGlvbiBEKHQsZSxyLG4pe2NvbnN0W3NdPXQsaT10PT5NYXRoLnJvdW5kKDFlNCp0KS8xZTQsYT10LnNsaWNlKDEpLm1hcCgodD0+K3QpKSxvPWUuc2xpY2UoMSkubWFwKCh0PT4rdCkpLHt4MTptLHkxOmMseDI6dSx5MjpsLHg6aCx5OmZ9PXI7bGV0IHk9dDtjb25zdFt4LHBdPW8uc2xpY2UoLTIpO2lmKFwiVFFcIi5pbmNsdWRlcyhzKXx8KHIucXg9bnVsbCxyLnF5PW51bGwpLFtcIlZcIixcIkhcIixcIlNcIixcIlRcIixcIlpcIl0uaW5jbHVkZXMocykpeT1bcywuLi5hXTtlbHNlIGlmKFwiTFwiPT09cylpKGgpPT09aSh4KT95PVtcIlZcIixwXTppKGYpPT09aShwKSYmKHk9W1wiSFwiLHhdKTtlbHNlIGlmKFwiQ1wiPT09cyl7Y29uc3RbdCxlXT1vO1wiQ1NcIi5pbmNsdWRlcyhuKSYmKGkodCk9PT1pKDIqbS11KSYmaShlKT09PWkoMipjLWwpfHxpKG0pPT09aSgyKnUtaCkmJmkoYyk9PT1pKDIqbC1mKSkmJih5PVtcIlNcIiwuLi5vLnNsaWNlKC00KV0pLHIueDE9dCxyLnkxPWV9ZWxzZSBpZihcIlFcIj09PXMpe2NvbnN0W3QsZV09bztyLnF4PXQsci5xeT1lLFwiUVRcIi5pbmNsdWRlcyhuKSYmKGkodCk9PT1pKDIqbS11KSYmaShlKT09PWkoMipjLWwpfHxpKG0pPT09aSgyKnUtaCkmJmkoYyk9PT1pKDIqbC1mKSkmJih5PVtcIlRcIiwuLi5vLnNsaWNlKC0yKV0pfXJldHVybiB5fWZ1bmN0aW9uIFgodCxlKXtjb25zdCByPXYodCksbj0kKHIpLHM9ey4uLlR9LGk9W10sYT1yLmxlbmd0aDtsZXQgbz1cIlwiLG09XCJcIixjPTAsdT0wLGw9MCxoPTA7Zm9yKGxldCB0PTA7dDxhO3QrPTEpe1tvXT1yW3RdLGlbdF09byx0JiYobT1pW3QtMV0pLHJbdF09RChyW3RdLG5bdF0scyxtKTtjb25zdCBlPXJbdF0sYT1lLmxlbmd0aDtzd2l0Y2gocy54MT0rZVthLTJdLHMueTE9K2VbYS0xXSxzLngyPStlW2EtNF18fHMueDEscy55Mj0rZVthLTNdfHxzLnkxLG8pe2Nhc2VcIlpcIjpjPWwsdT1oO2JyZWFrO2Nhc2VcIkhcIjpbLGNdPWU7YnJlYWs7Y2FzZVwiVlwiOlssdV09ZTticmVhaztkZWZhdWx0OltjLHVdPWUuc2xpY2UoLTIpLm1hcChOdW1iZXIpLFwiTVwiPT09byYmKGw9YyxoPXUpfXMueD1jLHMueT11fWNvbnN0IGY9UShyLGUpLHk9UShOKHIpLGUpO3JldHVybiBmLm1hcCgoKHQsZSk9PmU/dC5qb2luKFwiXCIpLmxlbmd0aDx5W2VdLmpvaW4oXCJcIikubGVuZ3RoP3Q6eVtlXTp0KSl9ZnVuY3Rpb24gWSh0KXtjb25zdCBlPW5ldyBzdCxyPUFycmF5LmZyb20odCk7aWYoIXIuZXZlcnkoKHQ9PiFOdW1iZXIuaXNOYU4odCkpKSl0aHJvdyBUeXBlRXJyb3IoYENTU01hdHJpeDogXCIke3R9XCIgbXVzdCBvbmx5IGhhdmUgbnVtYmVycy5gKTtpZigxNj09PXIubGVuZ3RoKXtjb25zdFt0LG4scyxpLGEsbyxtLGMsdSxsLGgsZix5LHgscCxnXT1yO2UubTExPXQsZS5hPXQsZS5tMjE9YSxlLmM9YSxlLm0zMT11LGUubTQxPXksZS5lPXksZS5tMTI9bixlLmI9bixlLm0yMj1vLGUuZD1vLGUubTMyPWwsZS5tNDI9eCxlLmY9eCxlLm0xMz1zLGUubTIzPW0sZS5tMzM9aCxlLm00Mz1wLGUubTE0PWksZS5tMjQ9YyxlLm0zND1mLGUubTQ0PWd9ZWxzZXtpZig2IT09ci5sZW5ndGgpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNTU01hdHJpeDogZXhwZWN0aW5nIGFuIEFycmF5IG9mIDYvMTYgdmFsdWVzLlwiKTt7Y29uc3RbdCxuLHMsaSxhLG9dPXI7ZS5tMTE9dCxlLmE9dCxlLm0xMj1uLGUuYj1uLGUubTIxPXMsZS5jPXMsZS5tMjI9aSxlLmQ9aSxlLm00MT1hLGUuZT1hLGUubTQyPW8sZS5mPW99fXJldHVybiBlfWZ1bmN0aW9uIEIodCl7Y29uc3QgZT1PYmplY3Qua2V5cyhuZXcgc3QpO2lmKFwib2JqZWN0XCI9PXR5cGVvZiB0JiZlLmV2ZXJ5KChlPT5lIGluIHQpKSlyZXR1cm4gWShbdC5tMTEsdC5tMTIsdC5tMTMsdC5tMTQsdC5tMjEsdC5tMjIsdC5tMjMsdC5tMjQsdC5tMzEsdC5tMzIsdC5tMzMsdC5tMzQsdC5tNDEsdC5tNDIsdC5tNDMsdC5tNDRdKTt0aHJvdyBUeXBlRXJyb3IoYENTU01hdHJpeDogXCIke0pTT04uc3RyaW5naWZ5KHQpfVwiIGlzIG5vdCBhIERPTU1hdHJpeCAvIENTU01hdHJpeCAvIEpTT04gY29tcGF0aWJsZSBvYmplY3QuYCl9XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgbXV0YWJsZSBgQ1NTTWF0cml4YCBnaXZlbiBhbnkgdmFsaWQgQ1NTIHRyYW5zZm9ybSBzdHJpbmcsXG4gKiBvciB3aGF0IHdlIGNhbGwgYFRyYW5zZm9ybUxpc3RgOlxuICpcbiAqICogYG1hdHJpeChhLCBiLCBjLCBkLCBlLCBmKWAgLSB2YWxpZCBtYXRyaXgoKSB0cmFuc2Zvcm0gZnVuY3Rpb25cbiAqICogYG1hdHJpeDNkKG0xMSwgbTEyLCBtMTMsIC4uLm00NClgIC0gdmFsaWQgbWF0cml4M2QoKSB0cmFuc2Zvcm0gZnVuY3Rpb25cbiAqICogYHRyYW5zbGF0ZSh0eCwgdHkpIHJvdGF0ZVgoYWxwaGEpYCAtIGFueSB2YWxpZCB0cmFuc2Zvcm0gZnVuY3Rpb24ocylcbiAqXG4gKiBAY29weXJpZ2h0IHRoZWRucCDCqSAyMDIxXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSB2YWxpZCBDU1MgdHJhbnNmb3JtIHN0cmluZyBzeW50YXguXG4gKiBAcmV0dXJuIHtDU1NNYXRyaXh9IHRoZSByZXN1bHRlZCBtYXRyaXguXG4gKi9mdW5jdGlvbiBKKHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcihgQ1NTTWF0cml4OiBcIiR7dH1cIiBpcyBub3QgYSBzdHJpbmcuYCk7Y29uc3QgZT1TdHJpbmcodCkucmVwbGFjZSgvXFxzL2csXCJcIik7bGV0IHI9bmV3IHN0O2NvbnN0IG49YENTU01hdHJpeDogaW52YWxpZCB0cmFuc2Zvcm0gc3RyaW5nIFwiJHt0fVwiYDtyZXR1cm4gZS5zcGxpdChcIilcIikuZmlsdGVyKCh0PT50KSkuZm9yRWFjaCgodD0+e2NvbnN0W2Usc109dC5zcGxpdChcIihcIik7aWYoIXMpdGhyb3cgVHlwZUVycm9yKG4pO2NvbnN0IGk9cy5zcGxpdChcIixcIikubWFwKCh0PT50LmluY2x1ZGVzKFwicmFkXCIpP3BhcnNlRmxvYXQodCkqKDE4MC9NYXRoLlBJKTpwYXJzZUZsb2F0KHQpKSksW2EsbyxtLGNdPWksdT1bYSxvLG1dLGw9W2EsbyxtLGNdO2lmKFwicGVyc3BlY3RpdmVcIj09PWUmJmEmJltvLG1dLmV2ZXJ5KCh0PT52b2lkIDA9PT10KSkpci5tMzQ9LTEvYTtlbHNlIGlmKGUuaW5jbHVkZXMoXCJtYXRyaXhcIikmJls2LDE2XS5pbmNsdWRlcyhpLmxlbmd0aCkmJmkuZXZlcnkoKHQ9PiFOdW1iZXIuaXNOYU4oK3QpKSkpe2NvbnN0IHQ9aS5tYXAoKHQ9Pk1hdGguYWJzKHQpPDFlLTY/MDp0KSk7cj1yLm11bHRpcGx5KFkodCkpfWVsc2UgaWYoXCJ0cmFuc2xhdGUzZFwiPT09ZSYmdS5ldmVyeSgodD0+IU51bWJlci5pc05hTigrdCkpKSlyPXIudHJhbnNsYXRlKGEsbyxtKTtlbHNlIGlmKFwidHJhbnNsYXRlXCI9PT1lJiZhJiZ2b2lkIDA9PT1tKXI9ci50cmFuc2xhdGUoYSxvfHwwLDApO2Vsc2UgaWYoXCJyb3RhdGUzZFwiPT09ZSYmbC5ldmVyeSgodD0+IU51bWJlci5pc05hTigrdCkpKSYmYylyPXIucm90YXRlQXhpc0FuZ2xlKGEsbyxtLGMpO2Vsc2UgaWYoXCJyb3RhdGVcIj09PWUmJmEmJltvLG1dLmV2ZXJ5KCh0PT52b2lkIDA9PT10KSkpcj1yLnJvdGF0ZSgwLDAsYSk7ZWxzZSBpZihcInNjYWxlM2RcIj09PWUmJnUuZXZlcnkoKHQ9PiFOdW1iZXIuaXNOYU4oK3QpKSkmJnUuc29tZSgodD0+MSE9PXQpKSlyPXIuc2NhbGUoYSxvLG0pO2Vsc2UgaWYoXCJzY2FsZVwiIT09ZXx8TnVtYmVyLmlzTmFOKGEpfHwxPT09YXx8dm9pZCAwIT09bSlpZihcInNrZXdcIj09PWUmJihhfHwhTnVtYmVyLmlzTmFOKGEpJiZvKSYmdm9pZCAwPT09bSlyPXIuc2tldyhhLG98fDApO2Vsc2V7aWYoISgvW1hZWl0vLnRlc3QoZSkmJmEmJltvLG1dLmV2ZXJ5KCh0PT52b2lkIDA9PT10KSkmJltcInRyYW5zbGF0ZVwiLFwicm90YXRlXCIsXCJzY2FsZVwiLFwic2tld1wiXS5zb21lKCh0PT5lLmluY2x1ZGVzKHQpKSkpKXRocm93IFR5cGVFcnJvcihuKTtpZihbXCJza2V3WFwiLFwic2tld1lcIl0uaW5jbHVkZXMoZSkpcj1yW2VdKGEpO2Vsc2V7Y29uc3QgdD1lLnJlcGxhY2UoL1tYWVpdLyxcIlwiKSxuPWUucmVwbGFjZSh0LFwiXCIpLHM9W1wiWFwiLFwiWVwiLFwiWlwiXS5pbmRleE9mKG4pLGk9XCJzY2FsZVwiPT09dD8xOjAsbz1bMD09PXM/YTppLDE9PT1zP2E6aSwyPT09cz9hOmldO3I9clt0XSguLi5vKX19ZWxzZXtjb25zdCB0PU51bWJlci5pc05hTigrbyk/YTpvO3I9ci5zY2FsZShhLHQsMSl9fSkpLHJ9ZnVuY3Rpb24gRyh0LGUpe3JldHVybiBlP1t0LmEsdC5iLHQuYyx0LmQsdC5lLHQuZl06W3QubTExLHQubTEyLHQubTEzLHQubTE0LHQubTIxLHQubTIyLHQubTIzLHQubTI0LHQubTMxLHQubTMyLHQubTMzLHQubTM0LHQubTQxLHQubTQyLHQubTQzLHQubTQ0XX1mdW5jdGlvbiBVKHQsZSxyKXtjb25zdCBuPW5ldyBzdDtyZXR1cm4gbi5tNDE9dCxuLmU9dCxuLm00Mj1lLG4uZj1lLG4ubTQzPXIsbn1mdW5jdGlvbiBLKHQsZSxyKXtjb25zdCBuPW5ldyBzdCxzPU1hdGguUEkvMTgwLGk9dCpzLGE9ZSpzLG89cipzLG09TWF0aC5jb3MoaSksYz0tTWF0aC5zaW4oaSksdT1NYXRoLmNvcyhhKSxsPS1NYXRoLnNpbihhKSxoPU1hdGguY29zKG8pLGY9LU1hdGguc2luKG8pLHk9dSpoLHg9LXUqZjtuLm0xMT15LG4uYT15LG4ubTEyPXgsbi5iPXgsbi5tMTM9bDtjb25zdCBwPWMqbCpoK20qZjtuLm0yMT1wLG4uYz1wO2NvbnN0IGc9bSpoLWMqbCpmO3JldHVybiBuLm0yMj1nLG4uZD1nLG4ubTIzPS1jKnUsbi5tMzE9YypmLW0qbCpoLG4ubTMyPWMqaCttKmwqZixuLm0zMz1tKnUsbn1mdW5jdGlvbiBXKHQsZSxyLG4pe2NvbnN0IHM9bmV3IHN0LGk9TWF0aC5zcXJ0KHQqdCtlKmUrcipyKTtpZigwPT09aSlyZXR1cm4gcztjb25zdCBhPXQvaSxvPWUvaSxtPXIvaSxjPW4qKE1hdGguUEkvMzYwKSx1PU1hdGguc2luKGMpLGw9TWF0aC5jb3MoYyksaD11KnUsZj1hKmEseT1vKm8seD1tKm0scD0xLTIqKHkreCkqaDtzLm0xMT1wLHMuYT1wO2NvbnN0IGc9MiooYSpvKmgrbSp1KmwpO3MubTEyPWcscy5iPWcscy5tMTM9MiooYSptKmgtbyp1KmwpO2NvbnN0IGQ9MioobyphKmgtbSp1KmwpO3MubTIxPWQscy5jPWQ7Y29uc3QgYj0xLTIqKHgrZikqaDtyZXR1cm4gcy5tMjI9YixzLmQ9YixzLm0yMz0yKihvKm0qaCthKnUqbCkscy5tMzE9MioobSphKmgrbyp1KmwpLHMubTMyPTIqKG0qbypoLWEqdSpsKSxzLm0zMz0xLTIqKGYreSkqaCxzfWZ1bmN0aW9uIF8odCxlLHIpe2NvbnN0IG49bmV3IHN0O3JldHVybiBuLm0xMT10LG4uYT10LG4ubTIyPWUsbi5kPWUsbi5tMzM9cixufWZ1bmN0aW9uIHR0KHQsZSl7Y29uc3Qgcj1uZXcgc3Q7aWYodCl7Y29uc3QgZT10Kk1hdGguUEkvMTgwLG49TWF0aC50YW4oZSk7ci5tMjE9bixyLmM9bn1pZihlKXtjb25zdCB0PWUqTWF0aC5QSS8xODAsbj1NYXRoLnRhbih0KTtyLm0xMj1uLHIuYj1ufXJldHVybiByfWZ1bmN0aW9uIGV0KHQpe3JldHVybiB0dCh0LDApfWZ1bmN0aW9uIHJ0KHQpe3JldHVybiB0dCgwLHQpfWZ1bmN0aW9uIG50KHQsZSl7cmV0dXJuIFkoW2UubTExKnQubTExK2UubTEyKnQubTIxK2UubTEzKnQubTMxK2UubTE0KnQubTQxLGUubTExKnQubTEyK2UubTEyKnQubTIyK2UubTEzKnQubTMyK2UubTE0KnQubTQyLGUubTExKnQubTEzK2UubTEyKnQubTIzK2UubTEzKnQubTMzK2UubTE0KnQubTQzLGUubTExKnQubTE0K2UubTEyKnQubTI0K2UubTEzKnQubTM0K2UubTE0KnQubTQ0LGUubTIxKnQubTExK2UubTIyKnQubTIxK2UubTIzKnQubTMxK2UubTI0KnQubTQxLGUubTIxKnQubTEyK2UubTIyKnQubTIyK2UubTIzKnQubTMyK2UubTI0KnQubTQyLGUubTIxKnQubTEzK2UubTIyKnQubTIzK2UubTIzKnQubTMzK2UubTI0KnQubTQzLGUubTIxKnQubTE0K2UubTIyKnQubTI0K2UubTIzKnQubTM0K2UubTI0KnQubTQ0LGUubTMxKnQubTExK2UubTMyKnQubTIxK2UubTMzKnQubTMxK2UubTM0KnQubTQxLGUubTMxKnQubTEyK2UubTMyKnQubTIyK2UubTMzKnQubTMyK2UubTM0KnQubTQyLGUubTMxKnQubTEzK2UubTMyKnQubTIzK2UubTMzKnQubTMzK2UubTM0KnQubTQzLGUubTMxKnQubTE0K2UubTMyKnQubTI0K2UubTMzKnQubTM0K2UubTM0KnQubTQ0LGUubTQxKnQubTExK2UubTQyKnQubTIxK2UubTQzKnQubTMxK2UubTQ0KnQubTQxLGUubTQxKnQubTEyK2UubTQyKnQubTIyK2UubTQzKnQubTMyK2UubTQ0KnQubTQyLGUubTQxKnQubTEzK2UubTQyKnQubTIzK2UubTQzKnQubTMzK2UubTQ0KnQubTQzLGUubTQxKnQubTE0K2UubTQyKnQubTI0K2UubTQzKnQubTM0K2UubTQ0KnQubTQ0XSl9Y2xhc3Mgc3R7Y29uc3RydWN0b3IoLi4udCl7Y29uc3QgZT10aGlzO2lmKGUuYT0xLGUuYj0wLGUuYz0wLGUuZD0xLGUuZT0wLGUuZj0wLGUubTExPTEsZS5tMTI9MCxlLm0xMz0wLGUubTE0PTAsZS5tMjE9MCxlLm0yMj0xLGUubTIzPTAsZS5tMjQ9MCxlLm0zMT0wLGUubTMyPTAsZS5tMzM9MSxlLm0zND0wLGUubTQxPTAsZS5tNDI9MCxlLm00Mz0wLGUubTQ0PTEsdC5sZW5ndGgpe2NvbnN0IHI9WzE2LDZdLnNvbWUoKGU9PmU9PT10Lmxlbmd0aCkpP3Q6dFswXTtyZXR1cm4gZS5zZXRNYXRyaXhWYWx1ZShyKX1yZXR1cm4gZX1nZXQgaXNJZGVudGl0eSgpe2NvbnN0IHQ9dGhpcztyZXR1cm4gMT09PXQubTExJiYwPT09dC5tMTImJjA9PT10Lm0xMyYmMD09PXQubTE0JiYwPT09dC5tMjEmJjE9PT10Lm0yMiYmMD09PXQubTIzJiYwPT09dC5tMjQmJjA9PT10Lm0zMSYmMD09PXQubTMyJiYxPT09dC5tMzMmJjA9PT10Lm0zNCYmMD09PXQubTQxJiYwPT09dC5tNDImJjA9PT10Lm00MyYmMT09PXQubTQ0fWdldCBpczJEKCl7Y29uc3QgdD10aGlzO3JldHVybiAwPT09dC5tMzEmJjA9PT10Lm0zMiYmMT09PXQubTMzJiYwPT09dC5tMzQmJjA9PT10Lm00MyYmMT09PXQubTQ0fXNldE1hdHJpeFZhbHVlKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiZ0Lmxlbmd0aCYmXCJub25lXCIhPT10P0oodCk6W0FycmF5LEZsb2F0NjRBcnJheSxGbG9hdDMyQXJyYXldLnNvbWUoKGU9PnQgaW5zdGFuY2VvZiBlKSk/WSh0KTpbc3QsRE9NTWF0cml4LE9iamVjdF0uc29tZSgoZT0+dCBpbnN0YW5jZW9mIGUpKT9CKHQpOnRoaXN9dG9GbG9hdDMyQXJyYXkodCl7cmV0dXJuIEZsb2F0MzJBcnJheS5mcm9tKEcodGhpcyx0KSl9dG9GbG9hdDY0QXJyYXkodCl7cmV0dXJuIEZsb2F0NjRBcnJheS5mcm9tKEcodGhpcyx0KSl9dG9TdHJpbmcoKXtjb25zdHtpczJEOnR9PXRoaXM7cmV0dXJuYCR7dD9cIm1hdHJpeFwiOlwibWF0cml4M2RcIn0oJHt0aGlzLnRvRmxvYXQ2NEFycmF5KHQpLmpvaW4oXCIsIFwiKX0pYH10b0pTT04oKXtjb25zdHtpczJEOnQsaXNJZGVudGl0eTplfT10aGlzO3JldHVybnsuLi50aGlzLGlzMkQ6dCxpc0lkZW50aXR5OmV9fW11bHRpcGx5KHQpe3JldHVybiBudCh0aGlzLHQpfXRyYW5zbGF0ZSh0LGUscil7bGV0IG49ZSxzPXI7cmV0dXJuIHZvaWQgMD09PW4mJihuPTApLHZvaWQgMD09PXMmJihzPTApLG50KHRoaXMsVSh0LG4scykpfXNjYWxlKHQsZSxyKXtsZXQgbj1lLHM9cjtyZXR1cm4gdm9pZCAwPT09biYmKG49dCksdm9pZCAwPT09cyYmKHM9MSksbnQodGhpcyxfKHQsbixzKSl9cm90YXRlKHQsZSxyKXtsZXQgbj10LHM9ZXx8MCxpPXJ8fDA7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJnZvaWQgMD09PWUmJnZvaWQgMD09PXImJihpPW4sbj0wLHM9MCksbnQodGhpcyxLKG4scyxpKSl9cm90YXRlQXhpc0FuZ2xlKHQsZSxyLG4pe2lmKFt0LGUscixuXS5zb21lKCh0PT5OdW1iZXIuaXNOYU4oK3QpKSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNTU01hdHJpeDogZXhwZWN0aW5nIDQgdmFsdWVzXCIpO3JldHVybiBudCh0aGlzLFcodCxlLHIsbikpfXNrZXdYKHQpe3JldHVybiBudCh0aGlzLGV0KHQpKX1za2V3WSh0KXtyZXR1cm4gbnQodGhpcyxydCh0KSl9c2tldyh0LGUpe3JldHVybiBudCh0aGlzLHR0KHQsZSkpfXRyYW5zZm9ybVBvaW50KHQpe2NvbnN0IGU9dGhpcyxyPWUubTExKnQueCtlLm0yMSp0LnkrZS5tMzEqdC56K2UubTQxKnQudyxuPWUubTEyKnQueCtlLm0yMip0LnkrZS5tMzIqdC56K2UubTQyKnQudyxzPWUubTEzKnQueCtlLm0yMyp0LnkrZS5tMzMqdC56K2UubTQzKnQudyxpPWUubTE0KnQueCtlLm0yNCp0LnkrZS5tMzQqdC56K2UubTQ0KnQudztyZXR1cm4gdCBpbnN0YW5jZW9mIERPTVBvaW50P25ldyBET01Qb2ludChyLG4scyxpKTp7eDpyLHk6bix6OnMsdzppfX19T2JqZWN0LmFzc2lnbihzdCx7VHJhbnNsYXRlOlUsUm90YXRlOkssUm90YXRlQXhpc0FuZ2xlOlcsU2NhbGU6XyxTa2V3WDpldCxTa2V3WTpydCxTa2V3OnR0LE11bHRpcGx5Om50LGZyb21BcnJheTpZLGZyb21NYXRyaXg6Qixmcm9tU3RyaW5nOkosdG9BcnJheTpHfSk7ZnVuY3Rpb24gaXQodCxlLHIpe2NvbnN0W24scyxpXT1yLFthLG8sbV09XG4vKipcbiAqIFRyYW5zZm9ybXMgYSBzcGVjaWZpZWQgcG9pbnQgdXNpbmcgYSBtYXRyaXgsIHJldHVybmluZyBhIG5ld1xuICogVHVwbGUgKk9iamVjdCogY29tcHJpc2luZyBvZiB0aGUgdHJhbnNmb3JtZWQgcG9pbnQuXG4gKiBOZWl0aGVyIHRoZSBtYXRyaXggbm9yIHRoZSBvcmlnaW5hbCBwb2ludCBhcmUgYWx0ZXJlZC5cbiAqXG4gKiBAY29weXJpZ2h0IHRoZWRucCDCqSAyMDIxXG4gKlxuICogQHBhcmFtIHtTVkdQYXRoLkNTU01hdHJpeH0gTSBDU1NNYXRyaXggaW5zdGFuY2VcbiAqIEBwYXJhbSB7W251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl19IHYgVHVwbGVcbiAqIEByZXR1cm4ge1tudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdfSB0aGUgcmVzdWx0aW5nIFR1cGxlXG4gKi9cbmZ1bmN0aW9uKHQsZSl7bGV0IHI9VSguLi5lKTtyZXR1cm5bLCwsci5tNDRdPWUscj10Lm11bHRpcGx5KHIpLFtyLm00MSxyLm00MixyLm00MyxyLm00NF19KHQsWy4uLmUsMCwxXSksYz1vLXMsdT1tLWk7cmV0dXJuWyhhLW4pKihNYXRoLmFicyhpKS9NYXRoLmFicyh1KXx8MSkrbixjKihNYXRoLmFicyhpKS9NYXRoLmFicyh1KXx8MSkrc119ZnVuY3Rpb24gYXQodCxlKXtsZXQgcixuLHMsaSxvLG0sYz0wLHU9MDtjb25zdCBsPXYodCksaD1lJiZPYmplY3Qua2V5cyhlKTtpZighZXx8IWgubGVuZ3RoKXJldHVybiBnKGwpO2NvbnN0IGY9JChsKTtpZighZS5vcmlnaW4pe2NvbnN0e29yaWdpbjp0fT1hO09iamVjdC5hc3NpZ24oZSx7b3JpZ2luOnR9KX1jb25zdCB5PWZ1bmN0aW9uKHQpe2xldCBlPW5ldyBzdDtjb25zdHtvcmlnaW46cn09dCxbbixzXT1yLHt0cmFuc2xhdGU6aX09dCx7cm90YXRlOmF9PXQse3NrZXc6b309dCx7c2NhbGU6bX09dDtyZXR1cm4gQXJyYXkuaXNBcnJheShpKSYmaS5ldmVyeSgodD0+IU51bWJlci5pc05hTigrdCkpKSYmaS5zb21lKCh0PT4wIT09dCkpP2U9ZS50cmFuc2xhdGUoLi4uaSk6XCJudW1iZXJcIiE9dHlwZW9mIGl8fE51bWJlci5pc05hTihpKXx8KGU9ZS50cmFuc2xhdGUoaSkpLChhfHxvfHxtKSYmKGU9ZS50cmFuc2xhdGUobixzKSxBcnJheS5pc0FycmF5KGEpJiZhLmV2ZXJ5KCh0PT4hTnVtYmVyLmlzTmFOKCt0KSkpJiZhLnNvbWUoKHQ9PjAhPT10KSk/ZT1lLnJvdGF0ZSguLi5hKTpcIm51bWJlclwiIT10eXBlb2YgYXx8TnVtYmVyLmlzTmFOKGEpfHwoZT1lLnJvdGF0ZShhKSksQXJyYXkuaXNBcnJheShvKSYmby5ldmVyeSgodD0+IU51bWJlci5pc05hTigrdCkpKSYmby5zb21lKCh0PT4wIT09dCkpPyhlPW9bMF0/ZS5za2V3WChvWzBdKTplLGU9b1sxXT9lLnNrZXdZKG9bMV0pOmUpOlwibnVtYmVyXCIhPXR5cGVvZiBvfHxOdW1iZXIuaXNOYU4obyl8fChlPWUuc2tld1gobykpLEFycmF5LmlzQXJyYXkobSkmJm0uZXZlcnkoKHQ9PiFOdW1iZXIuaXNOYU4oK3QpKSkmJm0uc29tZSgodD0+MSE9PXQpKT9lPWUuc2NhbGUoLi4ubSk6XCJudW1iZXJcIiE9dHlwZW9mIG18fE51bWJlci5pc05hTihtKXx8KGU9ZS5zY2FsZShtKSksZT1lLnRyYW5zbGF0ZSgtbiwtcykpLGV9KGUpLHtvcmlnaW46eH09ZSxwPXsuLi5UfTtsZXQgZD1bXSxiPTAsTT1cIlwiLHc9W107Y29uc3QgQT1bXTtpZigheS5pc0lkZW50aXR5KXtmb3Iocj0wLHM9bC5sZW5ndGg7cjxzO3IrPTEpe2Q9bFtyXSxsW3JdJiYoW01dPWQpLEFbcl09TSxcIkFcIj09PU0mJihkPXooZltyXSxwKSxsW3JdPXooZltyXSxwKSxDKGwsQSxyKSxmW3JdPXooZltyXSxwKSxDKGYsQSxyKSxzPU1hdGgubWF4KGwubGVuZ3RoLGYubGVuZ3RoKSksZD1mW3JdLGI9ZC5sZW5ndGgscC54MT0rZFtiLTJdLHAueTE9K2RbYi0xXSxwLngyPStkW2ItNF18fHAueDEscC55Mj0rZFtiLTNdfHxwLnkxO2NvbnN0IHQ9e3M6bFtyXSxjOmxbcl1bMF0seDpwLngxLHk6cC55MX07dz1bLi4udyx0XX1yZXR1cm4gdy5tYXAoKHQ9Pntzd2l0Y2goTT10LmMsZD10LnMsTSl7Y2FzZVwiTFwiOmNhc2VcIkhcIjpjYXNlXCJWXCI6cmV0dXJuW28sbV09aXQoeSxbdC54LHQueV0seCksYyE9PW8mJnUhPT1tP2Q9W1wiTFwiLG8sbV06dT09PW0/ZD1bXCJIXCIsb106Yz09PW8mJihkPVtcIlZcIixtXSksYz1vLHU9bSxkO2RlZmF1bHQ6Zm9yKG49MSxpPWQubGVuZ3RoO248aTtuKz0yKVtjLHVdPWl0KHksWytkW25dLCtkW24rMV1dLHgpLGRbbl09YyxkW24rMV09dTtyZXR1cm4gZH19KSl9cmV0dXJuIGcobCl9ZnVuY3Rpb24gb3QodCxlKXtjb25zdHt4OnIseTpufT10LHt4OnMseTppfT1lLGE9cipzK24qaSxvPU1hdGguc3FydCgocioqMituKioyKSoocyoqMitpKioyKSk7cmV0dXJuKHIqaS1uKnM8MD8tMToxKSpNYXRoLmFjb3MoYS9vKX1mdW5jdGlvbiBtdCh0LGUscixuLHMsaSxhLG8sbSxjKXtjb25zdHthYnM6dSxzaW46bCxjb3M6aCxzcXJ0OmYsUEk6eX09TWF0aDtsZXQgeD11KHIpLHA9dShuKTtjb25zdCBnPShzJTM2MCszNjApJTM2MCooeS8xODApO2lmKHQ9PT1vJiZlPT09bSlyZXR1cm57eDp0LHk6ZX07aWYoMD09PXh8fDA9PT1wKXJldHVybiBMKHQsZSxvLG0sYykucG9pbnQ7Y29uc3QgZD0odC1vKS8yLGI9KGUtbSkvMixNPWgoZykqZCtsKGcpKmIsdz0tbChnKSpkK2goZykqYix2PU0qKjIveCoqMit3KioyL3AqKjI7dj4xJiYoeCo9Zih2KSxwKj1mKHYpKTtsZXQgQT0oeCoqMipwKioyLXgqKjIqdyoqMi1wKioyKk0qKjIpLyh4KioyKncqKjIrcCoqMipNKioyKTtBPUE8MD8wOkE7Y29uc3QgTj0oaSE9PWE/MTotMSkqZihBKSxDPU4qKHgqdy9wKSxQPU4qKC1wKk0veCksUz1oKGcpKkMtbChnKSpQKyh0K28pLzIsaz1sKGcpKkMraChnKSpQKyhlK20pLzIsVD17eDooTS1DKS94LHk6KHctUCkvcH0sJD1vdCh7eDoxLHk6MH0sVCk7bGV0IEU9b3QoVCx7eDooLU0tQykveCx5Oigtdy1QKS9wfSk7IWEmJkU+MD9FLT0yKnk6YSYmRTwwJiYoRSs9Mip5KSxFJT0yKnk7Y29uc3QgcT0kK0UqYyxPPXgqaChxKSxWPXAqbChxKTtyZXR1cm57eDpoKGcpKk8tbChnKSpWK1MseTpsKGcpKk8raChnKSpWK2t9fWZ1bmN0aW9uIGN0KHQsZSxyLG4scyxpLGEsbyxtLGMpe2NvbnN0IHU9XCJudW1iZXJcIj09dHlwZW9mIGM7bGV0IGw9dCxoPWUsZj0wLHk9W2wsaCxmXSx4PVtsLGhdLHA9MCxnPXt4OjAseTowfSxkPVt7eDpsLHk6aH1dO3UmJmM8PTAmJihnPXt4OmwseTpofSk7Zm9yKGxldCBiPTA7Yjw9MzAwO2IrPTEpe2lmKHA9Yi8zMDAsKHt4OmwseTpofT1tdCh0LGUscixuLHMsaSxhLG8sbSxwKSksZD1bLi4uZCx7eDpsLHk6aH1dLGYrPWooeCxbbCxoXSkseD1bbCxoXSx1JiZmPmMmJmM+eVsyXSl7Y29uc3QgdD0oZi1jKS8oZi15WzJdKTtnPXt4OnhbMF0qKDEtdCkreVswXSp0LHk6eFsxXSooMS10KSt5WzFdKnR9fXk9W2wsaCxmXX1yZXR1cm4gdSYmYz49ZiYmKGc9e3g6byx5Om19KSx7bGVuZ3RoOmYscG9pbnQ6ZyxtaW46e3g6TWF0aC5taW4oLi4uZC5tYXAoKHQ9PnQueCkpKSx5Ok1hdGgubWluKC4uLmQubWFwKCh0PT50LnkpKSl9LG1heDp7eDpNYXRoLm1heCguLi5kLm1hcCgodD0+dC54KSkpLHk6TWF0aC5tYXgoLi4uZC5tYXAoKHQ9PnQueSkpKX19fWZ1bmN0aW9uIHV0KHQsZSxyLG4scyxpLGEsbyxtKXtjb25zdCBjPTEtbTtyZXR1cm57eDpjKiozKnQrMypjKioyKm0qciszKmMqbSoqMipzK20qKjMqYSx5OmMqKjMqZSszKmMqKjIqbSpuKzMqYyptKioyKmkrbSoqMypvfX1mdW5jdGlvbiBsdCh0LGUscixuLHMsaSxhLG8sbSl7Y29uc3QgYz1cIm51bWJlclwiPT10eXBlb2YgbTtsZXQgdT10LGw9ZSxoPTAsZj1bdSxsLGhdLHk9W3UsbF0seD0wLHA9e3g6MCx5OjB9LGc9W3t4OnUseTpsfV07YyYmbTw9MCYmKHA9e3g6dSx5Omx9KTtmb3IobGV0IGQ9MDtkPD0zMDA7ZCs9MSl7aWYoeD1kLzMwMCwoe3g6dSx5Omx9PXV0KHQsZSxyLG4scyxpLGEsbyx4KSksZz1bLi4uZyx7eDp1LHk6bH1dLGgrPWooeSxbdSxsXSkseT1bdSxsXSxjJiZoPm0mJm0+ZlsyXSl7Y29uc3QgdD0oaC1tKS8oaC1mWzJdKTtwPXt4OnlbMF0qKDEtdCkrZlswXSp0LHk6eVsxXSooMS10KStmWzFdKnR9fWY9W3UsbCxoXX1yZXR1cm4gYyYmbT49aCYmKHA9e3g6YSx5Om99KSx7bGVuZ3RoOmgscG9pbnQ6cCxtaW46e3g6TWF0aC5taW4oLi4uZy5tYXAoKHQ9PnQueCkpKSx5Ok1hdGgubWluKC4uLmcubWFwKCh0PT50LnkpKSl9LG1heDp7eDpNYXRoLm1heCguLi5nLm1hcCgodD0+dC54KSkpLHk6TWF0aC5tYXgoLi4uZy5tYXAoKHQ9PnQueSkpKX19fWZ1bmN0aW9uIGh0KHQsZSxyLG4scyxpLGEpe2NvbnN0IG89MS1hO3JldHVybnt4Om8qKjIqdCsyKm8qYSpyK2EqKjIqcyx5Om8qKjIqZSsyKm8qYSpuK2EqKjIqaX19ZnVuY3Rpb24gZnQodCxlLHIsbixzLGksYSl7Y29uc3Qgbz1cIm51bWJlclwiPT10eXBlb2YgYTtsZXQgbT10LGM9ZSx1PTAsbD1bbSxjLHVdLGg9W20sY10sZj0wLHk9e3g6MCx5OjB9LHg9W3t4Om0seTpjfV07byYmYTw9MCYmKHk9e3g6bSx5OmN9KTtmb3IobGV0IHA9MDtwPD0zMDA7cCs9MSl7aWYoZj1wLzMwMCwoe3g6bSx5OmN9PWh0KHQsZSxyLG4scyxpLGYpKSx4PVsuLi54LHt4Om0seTpjfV0sdSs9aihoLFttLGNdKSxoPVttLGNdLG8mJnU+YSYmYT5sWzJdKXtjb25zdCB0PSh1LWEpLyh1LWxbMl0pO3k9e3g6aFswXSooMS10KStsWzBdKnQseTpoWzFdKigxLXQpK2xbMV0qdH19bD1bbSxjLHVdfXJldHVybiBvJiZhPj11JiYoeT17eDpzLHk6aX0pLHtsZW5ndGg6dSxwb2ludDp5LG1pbjp7eDpNYXRoLm1pbiguLi54Lm1hcCgodD0+dC54KSkpLHk6TWF0aC5taW4oLi4ueC5tYXAoKHQ9PnQueSkpKX0sbWF4Ont4Ok1hdGgubWF4KC4uLngubWFwKCh0PT50LngpKSkseTpNYXRoLm1heCguLi54Lm1hcCgodD0+dC55KSkpfX19ZnVuY3Rpb24geXQodCxlKXtjb25zdCByPSQodCksbj1cIm51bWJlclwiPT10eXBlb2YgZTtsZXQgcyxpLGEsbz1bXSxtPTAsYz0wLHU9MCxsPTAsaD1bXSxmPVtdLHk9MCx4PXt4OjAseTowfSxwPXgsZz14LGQ9eCxiPTA7Zm9yKGxldCB0PTAsTT1yLmxlbmd0aDt0PE07dCs9MSlhPXJbdF0sW2ldPWEscz1cIk1cIj09PWksbz1zP286W20sYywuLi5hLnNsaWNlKDEpXSxzPyhbLHUsbF09YSx4PXt4OnUseTpsfSxwPXgseT0wLG4mJmU8LjAwMSYmKGQ9eCkpOlwiTFwiPT09aT8oe2xlbmd0aDp5LG1pbjp4LG1heDpwLHBvaW50Omd9PUwoLi4ubywoZXx8MCktYikpOlwiQVwiPT09aT8oe2xlbmd0aDp5LG1pbjp4LG1heDpwLHBvaW50Omd9PWN0KC4uLm8sKGV8fDApLWIpKTpcIkNcIj09PWk/KHtsZW5ndGg6eSxtaW46eCxtYXg6cCxwb2ludDpnfT1sdCguLi5vLChlfHwwKS1iKSk6XCJRXCI9PT1pPyh7bGVuZ3RoOnksbWluOngsbWF4OnAscG9pbnQ6Z309ZnQoLi4ubywoZXx8MCktYikpOlwiWlwiPT09aSYmKG89W20sYyx1LGxdLCh7bGVuZ3RoOnksbWluOngsbWF4OnAscG9pbnQ6Z309TCguLi5vLChlfHwwKS1iKSkpLG4mJmI8ZSYmYit5Pj1lJiYoZD1nKSxmPVsuLi5mLHBdLGg9Wy4uLmgseF0sYis9eSxbbSxjXT1cIlpcIiE9PWk/YS5zbGljZSgtMik6W3UsbF07cmV0dXJuIG4mJmU+PWImJihkPXt4Om0seTpjfSkse2xlbmd0aDpiLHBvaW50OmQsbWluOnt4Ok1hdGgubWluKC4uLmgubWFwKCh0PT50LngpKSkseTpNYXRoLm1pbiguLi5oLm1hcCgodD0+dC55KSkpfSxtYXg6e3g6TWF0aC5tYXgoLi4uZi5tYXAoKHQ9PnQueCkpKSx5Ok1hdGgubWF4KC4uLmYubWFwKCh0PT50LnkpKSl9fX1mdW5jdGlvbiB4dCh0KXtpZighdClyZXR1cm57eDowLHk6MCx3aWR0aDowLGhlaWdodDowLHgyOjAseTI6MCxjeDowLGN5OjAsY3o6MH07Y29uc3R7bWluOnt4OmUseTpyfSxtYXg6e3g6bix5OnN9fT15dCh0KSxpPW4tZSxhPXMtcjtyZXR1cm57d2lkdGg6aSxoZWlnaHQ6YSx4OmUseTpyLHgyOm4seTI6cyxjeDplK2kvMixjeTpyK2EvMixjejpNYXRoLm1heChpLGEpK01hdGgubWluKGksYSkvMn19ZnVuY3Rpb24gcHQodCl7cmV0dXJuIHl0KHQpLmxlbmd0aH1mdW5jdGlvbiBndCh0LGUpe3JldHVybiB5dCh0LGUpLnBvaW50fU9iamVjdC5hc3NpZ24oc3Qse1ZlcnNpb246XCIxLjAuM1wifSk7Y2xhc3MgZHR7Y29uc3RydWN0b3IodCxlKXtjb25zdCByPWV8fHt9LG49dm9pZCAwPT09dDtpZihufHwhdC5sZW5ndGgpdGhyb3cgVHlwZUVycm9yKGAke2N9OiBcInBhdGhWYWx1ZVwiIGlzICR7bj9cInVuZGVmaW5lZFwiOlwiZW1wdHlcIn1gKTtjb25zdCBzPU0odCk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHMpdGhyb3cgVHlwZUVycm9yKHMpO3RoaXMuc2VnbWVudHM9cztjb25zdHt3aWR0aDppLGhlaWdodDpvLGN4Om0sY3k6dSxjejpsfT10aGlzLmdldEJCb3goKSx7cm91bmQ6aCxvcmlnaW46Zn09cjtsZXQgeSx4O2lmKFwiYXV0b1wiPT09aCl7Y29uc3QgdD1gJHtNYXRoLmZsb29yKE1hdGgubWF4KGksbykpfWAubGVuZ3RoO3k9dD49ND8wOjQtdH1lbHNlIE51bWJlci5pc0ludGVnZXIoaCl8fFwib2ZmXCI9PT1oP3k9aDooe3JvdW5kOnl9PWEpO2lmKEFycmF5LmlzQXJyYXkoZikmJmYubGVuZ3RoPj0yKXtjb25zdFt0LGUscl09Zi5tYXAoTnVtYmVyKTt4PVtOdW1iZXIuaXNOYU4odCk/bTp0LE51bWJlci5pc05hTihlKT91OmUsTnVtYmVyLmlzTmFOKHIpP2w6cl19ZWxzZSB4PVttLHUsbF07cmV0dXJuIHRoaXMucm91bmQ9eSx0aGlzLm9yaWdpbj14LHRoaXN9Z2V0QkJveCgpe3JldHVybiB4dCh0aGlzLnNlZ21lbnRzKX1nZXRUb3RhbExlbmd0aCgpe3JldHVybiBwdCh0aGlzLnNlZ21lbnRzKX1nZXRQb2ludEF0TGVuZ3RoKHQpe3JldHVybiBndCh0aGlzLnNlZ21lbnRzLHQpfXRvQWJzb2x1dGUoKXtjb25zdHtzZWdtZW50czp0fT10aGlzO3JldHVybiB0aGlzLnNlZ21lbnRzPXYodCksdGhpc310b1JlbGF0aXZlKCl7Y29uc3R7c2VnbWVudHM6dH09dGhpcztyZXR1cm4gdGhpcy5zZWdtZW50cz1OKHQpLHRoaXN9dG9DdXJ2ZSgpe2NvbnN0e3NlZ21lbnRzOnR9PXRoaXM7cmV0dXJuIHRoaXMuc2VnbWVudHM9Wih0KSx0aGlzfXJldmVyc2UodCl7dGhpcy50b0Fic29sdXRlKCk7Y29uc3R7c2VnbWVudHM6ZX09dGhpcyxyPUgoZSksbj1yLmxlbmd0aD4xP3I6MCxzPW4mJmcobikubWFwKCgoZSxyKT0+dD9yP0YoZSk6TShlKTpGKGUpKSk7bGV0IGk9W107cmV0dXJuIGk9bj9zLmZsYXQoMSk6dD9lOkYoZSksdGhpcy5zZWdtZW50cz1nKGkpLHRoaXN9bm9ybWFsaXplKCl7Y29uc3R7c2VnbWVudHM6dH09dGhpcztyZXR1cm4gdGhpcy5zZWdtZW50cz0kKHQpLHRoaXN9b3B0aW1pemUoKXtjb25zdHtzZWdtZW50czp0fT10aGlzO3JldHVybiB0aGlzLnNlZ21lbnRzPVgodCx0aGlzLnJvdW5kKSx0aGlzfXRyYW5zZm9ybSh0KXtpZighdHx8XCJvYmplY3RcIiE9dHlwZW9mIHR8fFwib2JqZWN0XCI9PXR5cGVvZiB0JiYhW1widHJhbnNsYXRlXCIsXCJyb3RhdGVcIixcInNrZXdcIixcInNjYWxlXCJdLnNvbWUoKGU9PmUgaW4gdCkpKXJldHVybiB0aGlzO2NvbnN0IGU9e307T2JqZWN0LmtleXModCkuZm9yRWFjaCgocj0+e2Vbcl09QXJyYXkuaXNBcnJheSh0W3JdKT9bLi4udFtyXV06TnVtYmVyKHRbcl0pfSkpO2NvbnN0e3NlZ21lbnRzOnJ9PXRoaXMsW24scyxpXT10aGlzLm9yaWdpbix7b3JpZ2luOmF9PWU7aWYoQXJyYXkuaXNBcnJheShhKSYmYS5sZW5ndGg+PTIpe2NvbnN0W3QscixvXT1hLm1hcChOdW1iZXIpO2Uub3JpZ2luPVtOdW1iZXIuaXNOYU4odCk/bjp0LE51bWJlci5pc05hTihyKT9zOnIsb3x8aV19ZWxzZSBlLm9yaWdpbj1bbixzLGldO3JldHVybiB0aGlzLnNlZ21lbnRzPWF0KHIsZSksdGhpc31mbGlwWCgpe3JldHVybiB0aGlzLnRyYW5zZm9ybSh7cm90YXRlOlswLDE4MCwwXX0pLHRoaXN9ZmxpcFkoKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oe3JvdGF0ZTpbMTgwLDAsMF19KSx0aGlzfXRvU3RyaW5nKCl7cmV0dXJuIFIodGhpcy5zZWdtZW50cyx0aGlzLnJvdW5kKX19ZnVuY3Rpb24gYnQodCl7bGV0IGU9MCxyPTAsbj0wO3JldHVybiBaKHQpLm1hcCgodD0+XCJNXCI9PT10WzBdPyhbLGUscl09dCwwKToobj1mdW5jdGlvbih0LGUscixuLHMsaSxhLG8pe3JldHVybiAzKigoby1lKSoocitzKS0oYS10KSoobitpKStuKih0LXMpLXIqKGUtaSkrbyoocyt0LzMpLWEqKGkrZS8zKSkvMjB9KGUsciwuLi50LnNsaWNlKDEpKSxbZSxyXT10LnNsaWNlKC0yKSxuKSkpLnJlZHVjZSgoKHQsZSk9PnQrZSksMCl9ZnVuY3Rpb24gTXQodCxlKXtjb25zdCByPU0odCk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHIpdGhyb3cgVHlwZUVycm9yKHIpO2xldCBuPVsuLi5yXSxzPXB0KG4pLGk9bi5sZW5ndGgtMSxhPTAsbz0wLG09clswXTtjb25zdFtjLHVdPW0uc2xpY2UoLTIpLGw9e3g6Yyx5OnV9O2lmKGk8PTB8fCFlfHwhTnVtYmVyLmlzRmluaXRlKGUpKXJldHVybntzZWdtZW50Om0saW5kZXg6MCxsZW5ndGg6byxwb2ludDpsLGxlbmd0aEF0U2VnbWVudDphfTtpZihlPj1zKXJldHVybiBuPXIuc2xpY2UoMCwtMSksYT1wdChuKSxvPXMtYSx7c2VnbWVudDpyW2ldLGluZGV4OmksbGVuZ3RoOm8sbGVuZ3RoQXRTZWdtZW50OmF9O2NvbnN0IGg9W107Zm9yKDtpPjA7KW09bltpXSxuPW4uc2xpY2UoMCwtMSksYT1wdChuKSxvPXMtYSxzPWEsaC5wdXNoKHtzZWdtZW50Om0saW5kZXg6aSxsZW5ndGg6byxsZW5ndGhBdFNlZ21lbnQ6YX0pLGktPTE7cmV0dXJuIGguZmluZCgoKHtsZW5ndGhBdFNlZ21lbnQ6dH0pPT50PD1lKSl9ZnVuY3Rpb24gd3QodCxlKXtjb25zdCByPU0odCksbj0kKHIpLHM9cHQociksaT10PT57Y29uc3Qgcj10LngtZS54LG49dC55LWUueTtyZXR1cm4gcipyK24qbn07bGV0IGEsbyxtLGMsdT04LGw9MCxoPTAsZj0xLzA7Zm9yKGxldCB0PTA7dDw9czt0Kz11KWE9Z3Qobix0KSxsPWkoYSksbDxmJiYobz1hLGg9dCxmPWwpO3UvPTI7bGV0IHk9MCx4PTAscD0wLGc9MDtmb3IoO3U+LjU7KXk9aC11LG09Z3Qobix5KSxwPWkobSkseD1oK3UsYz1ndChuLHgpLGc9aShjKSx5Pj0wJiZwPGY/KG89bSxoPXksZj1wKTp4PD1zJiZnPGY/KG89YyxoPXgsZj1nKTp1Lz0yO2NvbnN0IGQ9TXQocixoKTtyZXR1cm57Y2xvc2VzdDpvLGRpc3RhbmNlOk1hdGguc3FydChmKSxzZWdtZW50OmR9fWZ1bmN0aW9uIHZ0KHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXJldHVybiExO2NvbnN0IGU9bmV3IGQodCk7Zm9yKHkoZSk7ZS5pbmRleDxlLm1heCYmIWUuZXJyLmxlbmd0aDspcChlKTtyZXR1cm4hZS5lcnIubGVuZ3RoJiZcIm1NXCIuaW5jbHVkZXMoZS5zZWdtZW50c1swXVswXSl9Y29uc3QgQXQ9e2xpbmU6W1wieDFcIixcInkxXCIsXCJ4MlwiLFwieTJcIl0sY2lyY2xlOltcImN4XCIsXCJjeVwiLFwiclwiXSxlbGxpcHNlOltcImN4XCIsXCJjeVwiLFwicnhcIixcInJ5XCJdLHJlY3Q6W1wid2lkdGhcIixcImhlaWdodFwiLFwieFwiLFwieVwiLFwicnhcIixcInJ5XCJdLHBvbHlnb246W1wicG9pbnRzXCJdLHBvbHlsaW5lOltcInBvaW50c1wiXSxnbHlwaDpbXCJkXCJdfTtjb25zdCBOdD17Q1NTTWF0cml4OnN0LHBhcnNlUGF0aFN0cmluZzpNLGlzUGF0aEFycmF5OmIsaXNDdXJ2ZUFycmF5OlMsaXNBYnNvbHV0ZUFycmF5OncsaXNSZWxhdGl2ZUFycmF5OkEsaXNOb3JtYWxpemVkQXJyYXk6UCxpc1ZhbGlkUGF0aDp2dCxwYXRoVG9BYnNvbHV0ZTp2LHBhdGhUb1JlbGF0aXZlOk4scGF0aFRvQ3VydmU6WixwYXRoVG9TdHJpbmc6UixnZXREcmF3RGlyZWN0aW9uOmZ1bmN0aW9uKHQpe3JldHVybiBidChaKHQpKT49MH0sZ2V0UGF0aEFyZWE6YnQsZ2V0UGF0aEJCb3g6eHQscGF0aExlbmd0aEZhY3Rvcnk6eXQsZ2V0VG90YWxMZW5ndGg6cHQsZ2V0UG9pbnRBdExlbmd0aDpndCxnZXRDbG9zZXN0UG9pbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gd3QodCxlKS5jbG9zZXN0fSxnZXRTZWdtZW50T2ZQb2ludDpmdW5jdGlvbih0LGUpe3JldHVybiB3dCh0LGUpLnNlZ21lbnR9LGdldFByb3BlcnRpZXNBdFBvaW50Ond0LGdldFByb3BlcnRpZXNBdExlbmd0aDpNdCxnZXRTZWdtZW50QXRMZW5ndGg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gTXQodCxlKS5zZWdtZW50fSxpc1BvaW50SW5TdHJva2U6ZnVuY3Rpb24odCxlKXtjb25zdHtkaXN0YW5jZTpyfT13dCh0LGUpO3JldHVybiBNYXRoLmFicyhyKTwuMDAxfSxjbG9uZVBhdGg6ZyxzcGxpdFBhdGg6SCxmaXhQYXRoOmZ1bmN0aW9uKHQpe2NvbnN0IGU9TSh0KSxyPSQoZSkse2xlbmd0aDpufT1lLHM9XCJaXCI9PT1yLnNsaWNlKC0xKVswXVswXSxpPXM/bi0yOm4tMSxbYSxvXT1yWzBdLnNsaWNlKDEpLFttLGNdPXJbaV0uc2xpY2UoLTIpO3JldHVybiBzJiZhPT09bSYmbz09PWM/ZS5zbGljZSgwLC0xKTplfSxyb3VuZFBhdGg6USxvcHRpbWl6ZVBhdGg6WCxyZXZlcnNlQ3VydmU6ZnVuY3Rpb24odCl7Y29uc3QgZT10LnNsaWNlKDEpLm1hcCgoKGUscixuKT0+cj9bLi4ubltyLTFdLnNsaWNlKC0yKSwuLi5lLnNsaWNlKDEpXTpbLi4udFswXS5zbGljZSgxKSwuLi5lLnNsaWNlKDEpXSkpLm1hcCgodD0+dC5tYXAoKChlLHIpPT50W3QubGVuZ3RoLXItMiooMS1yJTIpXSkpKSkucmV2ZXJzZSgpO3JldHVybltbXCJNXCIsLi4uZVswXS5zbGljZSgwLDIpXSwuLi5lLm1hcCgodD0+W1wiQ1wiLC4uLnQuc2xpY2UoMildKSldfSxyZXZlcnNlUGF0aDpGLG5vcm1hbGl6ZVBhdGg6JCx0cmFuc2Zvcm1QYXRoOmF0LHNoYXBlVG9QYXRoOmZ1bmN0aW9uKHQsZSl7Y29uc3Qgcj1PYmplY3Qua2V5cyhBdCkse3RhZ05hbWU6bn09dDtpZihuJiYhci5zb21lKCh0PT5uPT09dCkpKXRocm93IFR5cGVFcnJvcihgJHtjfTogXCIke259XCIgaXMgbm90IFNWR0VsZW1lbnRgKTtjb25zdCBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJwYXRoXCIpLGk9bnx8dC50eXBlLG89e307by50eXBlPWk7Y29uc3QgbT1BdFtpXTtsZXQgdTtuPyhtLmZvckVhY2goKGU9PntvW2VdPXQuZ2V0QXR0cmlidXRlKGUpfSkpLE9iamVjdC52YWx1ZXModC5hdHRyaWJ1dGVzKS5mb3JFYWNoKCgoe25hbWU6dCx2YWx1ZTplfSk9PnttLmluY2x1ZGVzKHQpfHxzLnNldEF0dHJpYnV0ZSh0LGUpfSkpKTooT2JqZWN0LmFzc2lnbihvLHQpLE9iamVjdC5rZXlzKG8pLmZvckVhY2goKHQ9PnttLmluY2x1ZGVzKHQpfHxcInR5cGVcIj09PXR8fHMuc2V0QXR0cmlidXRlKHQucmVwbGFjZSgvW0EtWl0vZywodD0+YC0ke3QudG9Mb3dlckNhc2UoKX1gKSksb1t0XSl9KSkpO2NvbnN0e3JvdW5kOmx9PWE7cmV0dXJuXCJjaXJjbGVcIj09PWk/dT1SKGZ1bmN0aW9uKHQpe2NvbnN0e2N4OmUsY3k6cixyOm59PXQ7cmV0dXJuW1tcIk1cIixlLW4scl0sW1wiYVwiLG4sbiwwLDEsMCwyKm4sMF0sW1wiYVwiLG4sbiwwLDEsMCwtMipuLDBdXX0obyksbCk6XCJlbGxpcHNlXCI9PT1pP3U9UihmdW5jdGlvbih0KXtjb25zdHtjeDplLGN5OnIscng6bixyeTpzfT10O3JldHVybltbXCJNXCIsZS1uLHJdLFtcImFcIixuLHMsMCwxLDAsMipuLDBdLFtcImFcIixuLHMsMCwxLDAsLTIqbiwwXV19KG8pLGwpOltcInBvbHlsaW5lXCIsXCJwb2x5Z29uXCJdLmluY2x1ZGVzKGkpP3U9UihmdW5jdGlvbih0KXtjb25zdCBlPVtdLHI9KHQucG9pbnRzfHxcIlwiKS50cmltKCkuc3BsaXQoL1tcXHN8LF0vKS5tYXAoTnVtYmVyKTtsZXQgbj0wO2Zvcig7bjxyLmxlbmd0aDspZS5wdXNoKFtuP1wiTFwiOlwiTVwiLHJbbl0scltuKzFdXSksbis9MjtyZXR1cm5cInBvbHlnb25cIj09PXQudHlwZT9bLi4uZSxbXCJ6XCJdXTplfShvKSxsKTpcInJlY3RcIj09PWk/dT1SKGZ1bmN0aW9uKHQpe2NvbnN0IGU9K3QueHx8MCxyPSt0Lnl8fDAsbj0rdC53aWR0aCxzPSt0LmhlaWdodDtsZXQgaT0rdC5yeCxhPSt0LnJ5O3JldHVybiBpfHxhPyhpPWl8fGEsYT1hfHxpLDIqaT5uJiYoaS09KDIqaS1uKS8yKSwyKmE+cyYmKGEtPSgyKmEtcykvMiksW1tcIk1cIixlK2kscl0sW1wiaFwiLG4tMippXSxbXCJzXCIsaSwwLGksYV0sW1widlwiLHMtMiphXSxbXCJzXCIsMCxhLC1pLGFdLFtcImhcIiwyKmktbl0sW1wic1wiLC1pLDAsLWksLWFdLFtcInZcIiwyKmEtc10sW1wic1wiLDAsLWEsaSwtYV1dKTpbW1wiTVwiLGUscl0sW1wiaFwiLG5dLFtcInZcIixzXSxbXCJIXCIsZV0sW1wiWlwiXV19KG8pLGwpOlwibGluZVwiPT09aT91PVIoZnVuY3Rpb24odCl7Y29uc3R7eDE6ZSx5MTpyLHgyOm4seTI6c309dDtyZXR1cm5bW1wiTVwiLGUscl0sW1wiTFwiLG4sc11dfShvKSxsKTpcImdseXBoXCI9PT1pJiYodT1uP3QuZ2V0QXR0cmlidXRlKFwiZFwiKTp0LmQpLCEhdnQodSkmJihzLnNldEF0dHJpYnV0ZShcImRcIix1KSxlJiZuJiYodC5iZWZvcmUocyx0KSx0LnJlbW92ZSgpKSxzKX0sb3B0aW9uczphfTtPYmplY3QuYXNzaWduKGR0LE50LHtWZXJzaW9uOlwiMS4wLjVcIn0pO2NvbnN0IEN0PXQ9Pm51bGw9PXQsUHQ9YT0+e2NvbnN0e3dpZHRoOm8saGVpZ2h0Om0sY3g6YyxjeTp1LHJ4Omwscnk6aCxzdGFydE9mZnNldDpmLHJldmVyc2VkOnksdGV4dDp4LHN2Z1Byb3BzOnAsZWxsaXBzZVByb3BzOmcsdGV4dFBhdGhQcm9wczpkLHRleHRQcm9wczpiLHRzcGFuUHJvcHM6TX09YSxbdyx2XT1lKCExKSxbQV09ZShgZWxsaXBzZS1pZCR7cigpLnJlcGxhY2VBbGwoXCI6XCIsXCItXCIpfWApLE49bigpO2lmKHMoKCgpPT57aWYoTi5jdXJyZW50KXtjb25zdCB0PXtpZDpBLHR5cGU6XCJlbGxpcHNlXCIscng6bCxyeTpoLGN4OmMsY3k6dSxzdHlsZTpcImZpbGw6IG5vbmU7XCIsLi4uZ30sZT1OLmN1cnJlbnQscj1kdC5zaGFwZVRvUGF0aCh0LCEwKSxuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKEEpO2lmKG4mJm4ucmVtb3ZlKCksZS5wcmVwZW5kKHIpLHkpe2NvbnN0IHQ9ci5nZXRBdHRyaWJ1dGUoXCJkXCIpLGU9ZHQucmV2ZXJzZVBhdGgodCksbj1kdC5wYXRoVG9TdHJpbmcoZSk7ci5zZXRBdHRyaWJ1dGUoXCJkXCIsbil9dighMCl9fSksW04uY3VycmVudCx5LG8sbSxwLGMsdSxsLGgsZ10pLEN0KG8pKXRocm93IG5ldyBFcnJvcihcIlJlYWN0Q3VydmVkVGV4dCBFcnJvcjogd2lkdGggaXMgcmVxdWlyZWRcIik7aWYoQ3QobSkpdGhyb3cgbmV3IEVycm9yKFwiUmVhY3RDdXJ2ZWRUZXh0IEVycm9yOiBoZWlnaHQgaXMgcmVxdWlyZWRcIik7aWYoQ3QoYykpdGhyb3cgbmV3IEVycm9yKFwiUmVhY3RDdXJ2ZWRUZXh0IEVycm9yOiBjeCBpcyByZXF1aXJlZFwiKTtpZihDdCh1KSl0aHJvdyBuZXcgRXJyb3IoXCJSZWFjdEN1cnZlZFRleHQgRXJyb3I6IGN5IGlzIHJlcXVpcmVkXCIpO2lmKEN0KGwpKXRocm93IG5ldyBFcnJvcihcIlJlYWN0Q3VydmVkVGV4dCBFcnJvcjogcnggaXMgcmVxdWlyZWRcIik7aWYoQ3QoaCkpdGhyb3cgbmV3IEVycm9yKFwiUmVhY3RDdXJ2ZWRUZXh0IEVycm9yOiByeSBpcyByZXF1aXJlZFwiKTtpZihDdCh4KSl0aHJvdyBuZXcgRXJyb3IoXCJSZWFjdEN1cnZlZFRleHQgRXJyb3I6IHRleHQgaXMgcmVxdWlyZWRcIik7Y29uc3QgQz1KU09OLnN0cmluZ2lmeSh7d2lkdGg6byxoZWlnaHQ6bSxjeDpjLGN5OnUscng6bCxyeTpoLHN0YXJ0T2Zmc2V0OmYscmV2ZXJzZWQ6eSx0ZXh0Ongsc3ZnUHJvcHM6cCxlbGxpcHNlUHJvcHM6Zyx0ZXh0UGF0aFByb3BzOmQsdGV4dFByb3BzOmIsdHNwYW5Qcm9wczpNLHJlbmRlcmVkOnd9KTtyZXR1cm4gdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsaSh7cmVmOk4saGVpZ2h0Om0sd2lkdGg6b30scCksdC5jcmVhdGVFbGVtZW50KFwidGV4dFwiLGkoe2tleTpDfSxiKSx0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0UGF0aFwiLGkoe3hsaW5rSHJlZjpgIyR7QX1gLHN0YXJ0T2Zmc2V0OmZ9LGQpLHQuY3JlYXRlRWxlbWVudChcInRzcGFuXCIsTSx4KSkpKX07ZXhwb3J0e1B0IGFzIFJlYWN0Q3VydmVkVGV4dCxQdCBhcyBkZWZhdWx0fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/react-curved-text@2.0.2_rea_21acddbbe130a6ca55cb0b3a0d033fb6/node_modules/react-curved-text/dist/index.es.js\n");

/***/ })

};
;